// Generated by purs version 0.13.6
import * as Affjax from "../Affjax/index.js";
import * as Affjax_RequestBody from "../Affjax.RequestBody/index.js";
import * as Affjax_RequestHeader from "../Affjax.RequestHeader/index.js";
import * as Affjax_ResponseFormat from "../Affjax.ResponseFormat/index.js";
import * as Conduit_Api_Endpoint from "../Conduit.Api.Endpoint/index.js";
import * as Conduit_Data_Avatar from "../Conduit.Data.Avatar/index.js";
import * as Conduit_Data_Email from "../Conduit.Data.Email/index.js";
import * as Conduit_Data_Username from "../Conduit.Data.Username/index.js";
import * as Conduit_Data_Utils from "../Conduit.Data.Utils/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Apply from "../Control.Apply/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Argonaut_Decode_Class from "../Data.Argonaut.Decode.Class/index.js";
import * as Data_Argonaut_Decode_Struct_Tolerant_DecodeJson from "../Data.Argonaut.Decode.Struct.Tolerant.DecodeJson/index.js";
import * as Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson from "../Data.Argonaut.Decode.Struct.Tolerant.GDecodeJson/index.js";
import * as Data_Argonaut_Encode_Class from "../Data.Argonaut.Encode.Class/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_HTTP_Method from "../Data.HTTP.Method/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Operator_Top from "../Data.Operator.Top/index.js";
import * as Data_Struct_Insert_RInsert from "../Data.Struct.Insert.RInsert/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Aff_Class from "../Effect.Aff.Class/index.js";
import * as Record_Builder from "../Record.Builder/index.js";
import * as Routing_Duplex from "../Routing.Duplex/index.js";
import * as Type_Proxying_Symbol from "../Type.Proxying.Symbol/index.js";
import * as Web_HTML from "../Web.HTML/index.js";
import * as Web_HTML_Window from "../Web.HTML.Window/index.js";
import * as Web_Storage_Storage from "../Web.Storage.Storage/index.js";
var Token = function (x) {
    return x;
};
var Get = (function () {
    function Get() {

    };
    Get.value = new Get();
    return Get;
})();
var Post = (function () {
    function Post(value0) {
        this.value0 = value0;
    };
    Post.create = function (value0) {
        return new Post(value0);
    };
    return Post;
})();
var Put = (function () {
    function Put(value0) {
        this.value0 = value0;
    };
    Put.create = function (value0) {
        return new Put(value0);
    };
    return Put;
})();
var Delete = (function () {
    function Delete() {

    };
    Delete.value = new Delete();
    return Delete;
})();
var BaseURL = function (x) {
    return x;
};
var tokenKey = "token";
var writeToken = function (v) {
    return Control_Bind.bindFlipped(Effect.bindEffect)(Web_Storage_Storage.setItem(tokenKey)(v))(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.localStorage)(Web_HTML.window));
};
var removeToken = Control_Bind.bindFlipped(Effect.bindEffect)(Web_Storage_Storage.removeItem(tokenKey))(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.localStorage)(Web_HTML.window));
var readToken = function __do() {
    var str = Control_Bind.bindFlipped(Effect.bindEffect)(Web_Storage_Storage.getItem(tokenKey))(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.localStorage)(Web_HTML.window))();
    return Data_Functor.map(Data_Maybe.functorMaybe)(Token)(str);
};
var defaultRequest = function (v) {
    return function (auth) {
        return function (v1) {
            var v2 = (function () {
                if (v1.method instanceof Get) {
                    return new Data_Tuple.Tuple(Data_HTTP_Method.GET.value, Data_Maybe.Nothing.value);
                };
                if (v1.method instanceof Post) {
                    return new Data_Tuple.Tuple(Data_HTTP_Method.POST.value, v1.method.value0);
                };
                if (v1.method instanceof Put) {
                    return new Data_Tuple.Tuple(Data_HTTP_Method.PUT.value, v1.method.value0);
                };
                if (v1.method instanceof Delete) {
                    return new Data_Tuple.Tuple(Data_HTTP_Method.DELETE.value, Data_Maybe.Nothing.value);
                };
                throw new Error("Failed pattern match at Conduit.Api.Request (line 132, column 23 - line 136, column 35): " + [ v1.method.constructor.name ]);
            })();
            return {
                method: new Data_Either.Left(v2.value0),
                url: v + Routing_Duplex.print(Conduit_Api_Endpoint.endpointCodec)(v1.endpoint),
                headers: (function () {
                    if (auth instanceof Data_Maybe.Nothing) {
                        return [  ];
                    };
                    if (auth instanceof Data_Maybe.Just) {
                        return [ Affjax_RequestHeader.RequestHeader.create("Authorization")("Token " + auth.value0) ];
                    };
                    throw new Error("Failed pattern match at Conduit.Api.Request (line 122, column 14 - line 124, column 74): " + [ auth.constructor.name ]);
                })(),
                content: Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestBody.json)(v2.value1),
                username: Data_Maybe.Nothing.value,
                password: Data_Maybe.Nothing.value,
                withCredentials: false,
                responseFormat: Affjax_ResponseFormat.json
            };
        };
    };
};
var decodeParts = function (dictApply) {
    return function (decoder1) {
        return function (decoder2) {
            return function (value) {
                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Tuple.Tuple.create)(decoder1(value)))(decoder2(value));
            };
        };
    };
};
var decodeAuthProfile = decodeParts(Data_Either.applyEither)((function () {
    var $186 = Data_Functor.map(Data_Either.functorEither)(Token);
    var $187 = Conduit_Data_Utils.decodeAt(Data_Argonaut_Decode_Struct_Tolerant_DecodeJson.decodeDecodeJson(Data_Argonaut_Decode_Class.decodeJsonString))("token");
    return function ($188) {
        return $186($187($188));
    };
})())(Data_Argonaut_Decode_Struct_Tolerant_DecodeJson.decodeJson(Data_Argonaut_Decode_Struct_Tolerant_DecodeJson.decodeJsonRecord(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_Plus()(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_Plus()(Data_Argonaut_Decode_Class.decodeJsonMaybe(Conduit_Data_Avatar.decodeJsonAvatar))(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_nonPlus()(Conduit_Data_Username.decodeJsonUsername)(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_NilNilNil(Record_Builder.categoryBuilder)(Data_Operator_Top.top1_Either))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
    return "username";
}))()(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
    return "username";
}))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
    return "image";
}))()(Data_Maybe.plusMaybe)(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
    return "image";
}))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
    return "bio";
}))()(Data_Maybe.plusMaybe)(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
    return "bio";
}))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))()));
var requestUser = function (dictMonadAff) {
    return function (baseUrl) {
        return function (opts) {
            return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Affjax.request(defaultRequest(baseUrl)(Data_Maybe.Nothing.value)(opts))))(function (res) {
                return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())(Control_Bind.bindFlipped(Data_Either.bindEither)(decodeAuthProfile)(Control_Bind.bindFlipped(Data_Either.bindEither)(Conduit_Data_Utils.decodeAt(Data_Argonaut_Decode_Struct_Tolerant_DecodeJson.decodeDecodeJson(Data_Argonaut_Decode_Class.decodeJsonJson))("user"))(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Affjax.printError)(function (v) {
                    return v.body;
                })(res))));
            });
        };
    };
};
var login = function (dictMonadAff) {
    return function (baseUrl) {
        return function (fields) {
            var method = Post.create(Data_Maybe.Just.create(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Conduit_Data_Email.encodeJsonEmail)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                return "password";
            }))())(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                return "email";
            }))())())(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                return "user";
            }))())())({
                user: fields
            })));
            return requestUser(dictMonadAff)(baseUrl)({
                endpoint: Conduit_Api_Endpoint.Login.value,
                method: method
            });
        };
    };
};
var register = function (dictMonadAff) {
    return function (baseUrl) {
        return function (fields) {
            var method = Post.create(Data_Maybe.Just.create(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Conduit_Data_Email.encodeJsonEmail)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Conduit_Data_Username.encodeJsonUsername)(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                return "username";
            }))())(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                return "password";
            }))())(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                return "email";
            }))())())(Data_Argonaut_Encode_Class.gEncodeJsonNil)(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                return "user";
            }))())())({
                user: fields
            })));
            return requestUser(dictMonadAff)(baseUrl)({
                endpoint: Conduit_Api_Endpoint.Users.value,
                method: method
            });
        };
    };
};
export {
    BaseURL,
    Get,
    Post,
    Put,
    Delete,
    defaultRequest,
    login,
    register,
    readToken,
    writeToken,
    removeToken
};
