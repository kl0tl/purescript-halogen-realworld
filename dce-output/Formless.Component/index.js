// Generated by purs version 0.13.8
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Apply = require("../Control.Apply/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Functor_Variant = require("../Data.Functor.Variant/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Data_Variant = require("../Data.Variant/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Formless_Action = require("../Formless.Action/index.js");
var Formless_Data_FormFieldResult = require("../Formless.Data.FormFieldResult/index.js");
var Formless_Internal_Component = require("../Formless.Internal.Component/index.js");
var Formless_Internal_Debounce = require("../Formless.Internal.Debounce/index.js");
var Formless_Internal_Transform = require("../Formless.Internal.Transform/index.js");
var Formless_Transform_Record = require("../Formless.Transform.Record/index.js");
var Formless_Transform_Row = require("../Formless.Transform.Row/index.js");
var Formless_Types_Component = require("../Formless.Types.Component/index.js");
var Formless_Types_Form = require("../Formless.Types.Form/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Record_Builder = require("../Record.Builder/index.js");
var raiseResult = function (dictNewtype) {
    return function (dictHMap) {
        return function (v) {
            if (v instanceof Formless_Types_Component.Submitted) {
                return Halogen_Query_HalogenM.raise(Formless_Transform_Record.unwrapOutputFields(dictNewtype)(dictHMap)(v.value0));
            };
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
        };
    };
};
var handleAction = function (dictMonadAff) {
    return function (dictRowToList) {
        return function (dictRowToList1) {
            return function (dictEqRecord) {
                return function (dictInputFieldsToFormFields) {
                    return function (dictFormFieldsToInputFields) {
                        return function (dictCountErrors) {
                            return function (dictAllTouched) {
                                return function (dictSetFormFieldsTouched) {
                                    return function (dictReplaceFormFieldInputs) {
                                        return function (dictModifyAll) {
                                            return function (dictValidateAll) {
                                                return function (dictFormFieldToMaybeOutput) {
                                                    return function (dictNewtype) {
                                                        return function (dictNewtype1) {
                                                            return function (dictNewtype2) {
                                                                return function (dictNewtype3) {
                                                                    return function (dictNewtype4) {
                                                                        return function (dictNewtype5) {
                                                                            return function (dictNewtype6) {
                                                                                return function (dictNewtype7) {
                                                                                    return function (dictLacks) {
                                                                                        return function (handleAction$prime) {
                                                                                            return function (handleEvent) {
                                                                                                return function (action) {
                                                                                                    var sync = Data_Variant.inj()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                        return "syncFormData";
                                                                                                    }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
                                                                                                    return Data_Function.flip(Data_Variant.match()()())(action)({
                                                                                                        initialize: function (mbAction) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (dr) {
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (vr) {
                                                                                                                    var setFields = function (rec) {
                                                                                                                        return {
                                                                                                                            debounceRef: new Data_Maybe.Just(dr),
                                                                                                                            validationRef: new Data_Maybe.Just(vr),
                                                                                                                            allTouched: rec.allTouched,
                                                                                                                            initialInputs: rec.initialInputs,
                                                                                                                            validators: rec.validators
                                                                                                                        };
                                                                                                                    };
                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                        var $2030 = {};
                                                                                                                        for (var $2031 in st) {
                                                                                                                            if ({}.hasOwnProperty.call(st, $2031)) {
                                                                                                                                $2030[$2031] = st[$2031];
                                                                                                                            };
                                                                                                                        };
                                                                                                                        $2030.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(setFields)(st.internal);
                                                                                                                        return $2030;
                                                                                                                    }))(function ($dollar__unused) {
                                                                                                                        return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(handleAction$prime)(mbAction);
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        },
                                                                                                        syncFormData: function (v) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                var errors = Formless_Internal_Transform.countErrors()(dictCountErrors)(dictNewtype2)(st.form);
                                                                                                                var dirty = !Data_Eq.eq(Data_Eq.eqRec()(dictEqRecord))(Data_Newtype.unwrap(dictNewtype)(Formless_Internal_Transform.formFieldsToInputFields()(dictFormFieldsToInputFields)(dictNewtype)(dictNewtype2)(st.form)))(Data_Newtype.unwrap(dictNewtype)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).initialInputs));
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                                                                                                    var v1 = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).allTouched;
                                                                                                                    if (v1) {
                                                                                                                        return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                                                                                            var $2035 = {};
                                                                                                                            for (var $2036 in v2) {
                                                                                                                                if ({}.hasOwnProperty.call(v2, $2036)) {
                                                                                                                                    $2035[$2036] = v2[$2036];
                                                                                                                                };
                                                                                                                            };
                                                                                                                            $2035.validity = (function () {
                                                                                                                                var $2034 = errors === 0;
                                                                                                                                if ($2034) {
                                                                                                                                    return Formless_Types_Component.Valid.value;
                                                                                                                                };
                                                                                                                                return Formless_Types_Component.Invalid.value;
                                                                                                                            })();
                                                                                                                            $2035.errors = errors;
                                                                                                                            $2035.dirty = dirty;
                                                                                                                            return $2035;
                                                                                                                        });
                                                                                                                    };
                                                                                                                    var v2 = Formless_Internal_Transform.allTouched()(dictAllTouched)(dictNewtype2)(st.form);
                                                                                                                    if (v2) {
                                                                                                                        return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                                            var $2040 = {};
                                                                                                                            for (var $2041 in v3) {
                                                                                                                                if ({}.hasOwnProperty.call(v3, $2041)) {
                                                                                                                                    $2040[$2041] = v3[$2041];
                                                                                                                                };
                                                                                                                            };
                                                                                                                            $2040.validity = (function () {
                                                                                                                                var $2039 = errors === 0;
                                                                                                                                if ($2039) {
                                                                                                                                    return Formless_Types_Component.Valid.value;
                                                                                                                                };
                                                                                                                                return Formless_Types_Component.Invalid.value;
                                                                                                                            })();
                                                                                                                            $2040.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v4) {
                                                                                                                                return {
                                                                                                                                    allTouched: true,
                                                                                                                                    debounceRef: v4.debounceRef,
                                                                                                                                    initialInputs: v4.initialInputs,
                                                                                                                                    validationRef: v4.validationRef,
                                                                                                                                    validators: v4.validators
                                                                                                                                };
                                                                                                                            })(st.internal);
                                                                                                                            $2040.errors = errors;
                                                                                                                            $2040.dirty = dirty;
                                                                                                                            return $2040;
                                                                                                                        });
                                                                                                                    };
                                                                                                                    return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                                        var $2043 = {};
                                                                                                                        for (var $2044 in v3) {
                                                                                                                            if ({}.hasOwnProperty.call(v3, $2044)) {
                                                                                                                                $2043[$2044] = v3[$2044];
                                                                                                                            };
                                                                                                                        };
                                                                                                                        $2043.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                        $2043.errors = errors;
                                                                                                                        $2043.dirty = dirty;
                                                                                                                        return $2043;
                                                                                                                    });
                                                                                                                })())(function (newState) {
                                                                                                                    return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()(newState)));
                                                                                                                });
                                                                                                            });
                                                                                                        },
                                                                                                        userAction: function (act) {
                                                                                                            return handleAction$prime(act);
                                                                                                        },
                                                                                                        modify: function (variant) {
                                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                var $2046 = {};
                                                                                                                for (var $2047 in st) {
                                                                                                                    if ({}.hasOwnProperty.call(st, $2047)) {
                                                                                                                        $2046[$2047] = st[$2047];
                                                                                                                    };
                                                                                                                };
                                                                                                                $2046.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(Control_Category.identity(Control_Category.categoryFn))(variant)(st.form);
                                                                                                                return $2046;
                                                                                                            }))(function ($dollar__unused) {
                                                                                                                return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                            });
                                                                                                        },
                                                                                                        validate: function (variant) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                var validators = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).validators;
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.unsafeRunValidationVariant((dictMonadAff.MonadEffect0()).Monad0())(dictNewtype7)(dictNewtype2)(dictNewtype4)(variant)(validators)(st.form)))(function (form) {
                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                                                                                                        var $2049 = {};
                                                                                                                        for (var $2050 in v) {
                                                                                                                            if ({}.hasOwnProperty.call(v, $2050)) {
                                                                                                                                $2049[$2050] = v[$2050];
                                                                                                                            };
                                                                                                                        };
                                                                                                                        $2049.form = form;
                                                                                                                        return $2049;
                                                                                                                    }))(function ($dollar__unused) {
                                                                                                                        return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        },
                                                                                                        modifyValidate: function (v) {
                                                                                                            var validate = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                var vs = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).validators;
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.unsafeRunValidationVariant((dictMonadAff.MonadEffect0()).Monad0())(dictNewtype7)(dictNewtype2)(dictNewtype4)(v.value1)(vs)(st.form)))(function (form) {
                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                                                                                        var $2053 = {};
                                                                                                                        for (var $2054 in v1) {
                                                                                                                            if ({}.hasOwnProperty.call(v1, $2054)) {
                                                                                                                                $2053[$2054] = v1[$2054];
                                                                                                                            };
                                                                                                                        };
                                                                                                                        $2053.form = form;
                                                                                                                        return $2053;
                                                                                                                    }))(function ($dollar__unused) {
                                                                                                                        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(form);
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                            var modifyWith = function (f) {
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
                                                                                                                    var $2056 = {};
                                                                                                                    for (var $2057 in s) {
                                                                                                                        if ({}.hasOwnProperty.call(s, $2057)) {
                                                                                                                            $2056[$2057] = s[$2057];
                                                                                                                        };
                                                                                                                    };
                                                                                                                    $2056.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(f)(v.value1)(s.form);
                                                                                                                    return $2056;
                                                                                                                }))(function (st) {
                                                                                                                    return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(st.form);
                                                                                                                });
                                                                                                            };
                                                                                                            if (v.value0 instanceof Data_Maybe.Nothing) {
                                                                                                                return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(modifyWith(Control_Category.identity(Control_Category.categoryFn)))(validate))(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync));
                                                                                                            };
                                                                                                            if (v.value0 instanceof Data_Maybe.Just) {
                                                                                                                return Formless_Internal_Debounce.debounceForm(dictMonadAff)(v.value0.value0)(modifyWith(Control_Category.identity(Control_Category.categoryFn)))(Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(modifyWith(Data_Function["const"](Formless_Data_FormFieldResult.Validating.value)))(validate))(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync));
                                                                                                            };
                                                                                                            throw new Error("Failed pattern match at Formless.Component (line 263, column 7 - line 271, column 58): " + [ v.value0.constructor.name ]);
                                                                                                        },
                                                                                                        reset: function (variant) {
                                                                                                            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                var $2063 = {};
                                                                                                                for (var $2064 in st) {
                                                                                                                    if ({}.hasOwnProperty.call(st, $2064)) {
                                                                                                                        $2063[$2064] = st[$2064];
                                                                                                                    };
                                                                                                                };
                                                                                                                $2063.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(Control_Category.identity(Control_Category.categoryFn))(variant)(st.form);
                                                                                                                $2063.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v1) {
                                                                                                                    return {
                                                                                                                        allTouched: false,
                                                                                                                        debounceRef: v1.debounceRef,
                                                                                                                        initialInputs: v1.initialInputs,
                                                                                                                        validationRef: v1.validationRef,
                                                                                                                        validators: v1.validators
                                                                                                                    };
                                                                                                                })(st.internal);
                                                                                                                return $2063;
                                                                                                            }))(function ($dollar__unused) {
                                                                                                                return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                            });
                                                                                                        },
                                                                                                        setAll: function (v) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                var $2067 = {};
                                                                                                                for (var $2068 in st) {
                                                                                                                    if ({}.hasOwnProperty.call(st, $2068)) {
                                                                                                                        $2067[$2068] = st[$2068];
                                                                                                                    };
                                                                                                                };
                                                                                                                $2067.form = Formless_Internal_Transform.replaceFormFieldInputs()(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)(v.value0)(st.form);
                                                                                                                return $2067;
                                                                                                            }))(function ($$new) {
                                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new))))(function ($dollar__unused) {
                                                                                                                    if (v.value1) {
                                                                                                                        return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(Formless_Action.validateAll);
                                                                                                                    };
                                                                                                                    return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                });
                                                                                                            });
                                                                                                        },
                                                                                                        modifyAll: function (v) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                var $2074 = {};
                                                                                                                for (var $2075 in st) {
                                                                                                                    if ({}.hasOwnProperty.call(st, $2075)) {
                                                                                                                        $2074[$2075] = st[$2075];
                                                                                                                    };
                                                                                                                };
                                                                                                                $2074.form = Formless_Internal_Transform.modifyAll()(dictModifyAll)(dictNewtype1)(dictNewtype2)(v.value0)(st.form);
                                                                                                                return $2074;
                                                                                                            }))(function ($$new) {
                                                                                                                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new))))(function ($dollar__unused) {
                                                                                                                    if (v.value1) {
                                                                                                                        return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(Formless_Action.validateAll);
                                                                                                                    };
                                                                                                                    return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                });
                                                                                                            });
                                                                                                        },
                                                                                                        validateAll: function (v) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.validateAll()((dictMonadAff.MonadEffect0()).Monad0())(dictValidateAll)(dictNewtype4)(dictNewtype2)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).validators)(st.form)))(function (form) {
                                                                                                                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                                                                                        var $2080 = {};
                                                                                                                        for (var $2081 in v1) {
                                                                                                                            if ({}.hasOwnProperty.call(v1, $2081)) {
                                                                                                                                $2080[$2081] = v1[$2081];
                                                                                                                            };
                                                                                                                        };
                                                                                                                        $2080.form = form;
                                                                                                                        return $2080;
                                                                                                                    }))(function ($dollar__unused) {
                                                                                                                        return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(sync);
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        },
                                                                                                        resetAll: function (v) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                var $2083 = {};
                                                                                                                for (var $2084 in st) {
                                                                                                                    if ({}.hasOwnProperty.call(st, $2084)) {
                                                                                                                        $2083[$2084] = st[$2084];
                                                                                                                    };
                                                                                                                };
                                                                                                                $2083.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                $2083.dirty = false;
                                                                                                                $2083.errors = 0;
                                                                                                                $2083.submitAttempts = 0;
                                                                                                                $2083.submitting = false;
                                                                                                                $2083.form = Formless_Internal_Transform.replaceFormFieldInputs()(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).initialInputs)(st.form);
                                                                                                                $2083.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v2) {
                                                                                                                    return {
                                                                                                                        allTouched: false,
                                                                                                                        debounceRef: v2.debounceRef,
                                                                                                                        initialInputs: v2.initialInputs,
                                                                                                                        validationRef: v2.validationRef,
                                                                                                                        validators: v2.validators
                                                                                                                    };
                                                                                                                })(st.internal);
                                                                                                                return $2083;
                                                                                                            }))(function ($$new) {
                                                                                                                return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new)));
                                                                                                            });
                                                                                                        },
                                                                                                        submit: function (v) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.preSubmit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function ($dollar__unused) {
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(handleAction$prime)(handleEvent)(Formless_Action.validateAll))(function ($dollar__unused) {
                                                                                                                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.submit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($2096) {
                                                                                                                        return handleEvent(Formless_Types_Component.Submitted.create($2096));
                                                                                                                    }));
                                                                                                                });
                                                                                                            });
                                                                                                        },
                                                                                                        loadForm: function (formInputs) {
                                                                                                            var setFields = function (rec) {
                                                                                                                return {
                                                                                                                    allTouched: false,
                                                                                                                    initialInputs: formInputs,
                                                                                                                    debounceRef: rec.debounceRef,
                                                                                                                    validationRef: rec.validationRef,
                                                                                                                    validators: rec.validators
                                                                                                                };
                                                                                                            };
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v) {
                                                                                                                    var $2086 = {};
                                                                                                                    for (var $2087 in v) {
                                                                                                                        if ({}.hasOwnProperty.call(v, $2087)) {
                                                                                                                            $2086[$2087] = v[$2087];
                                                                                                                        };
                                                                                                                    };
                                                                                                                    $2086.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                    $2086.dirty = false;
                                                                                                                    $2086.errors = 0;
                                                                                                                    $2086.submitAttempts = 0;
                                                                                                                    $2086.submitting = false;
                                                                                                                    $2086.form = Formless_Internal_Transform.replaceFormFieldInputs()(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)(formInputs)(st.form);
                                                                                                                    $2086.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(setFields)(st.internal);
                                                                                                                    return $2086;
                                                                                                                }))(function ($$new) {
                                                                                                                    return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState()($$new)));
                                                                                                                });
                                                                                                            });
                                                                                                        }
                                                                                                    });
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var handleQuery = function (dictMonadAff) {
    return function (dictRowToList) {
        return function (dictRowToList1) {
            return function (dictEqRecord) {
                return function (dictInputFieldsToFormFields) {
                    return function (dictFormFieldsToInputFields) {
                        return function (dictCountErrors) {
                            return function (dictAllTouched) {
                                return function (dictSetFormFieldsTouched) {
                                    return function (dictReplaceFormFieldInputs) {
                                        return function (dictModifyAll) {
                                            return function (dictValidateAll) {
                                                return function (dictFormFieldToMaybeOutput) {
                                                    return function (dictNewtype) {
                                                        return function (dictNewtype1) {
                                                            return function (dictNewtype2) {
                                                                return function (dictNewtype3) {
                                                                    return function (dictNewtype4) {
                                                                        return function (dictNewtype5) {
                                                                            return function (dictNewtype6) {
                                                                                return function (dictNewtype7) {
                                                                                    return function (dictLacks) {
                                                                                        return function (handleQuery$prime) {
                                                                                            return function (handleEvent) {
                                                                                                return Data_Functor_Variant.match()()()({
                                                                                                    query: function (v) {
                                                                                                        if (v instanceof Formless_Types_Component.SubmitReply) {
                                                                                                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.preSubmit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function ($dollar__unused) {
                                                                                                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)))(handleEvent)(Formless_Action.validateAll))(function ($dollar__unused) {
                                                                                                                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.submit(dictMonadAff)()(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function (mbForm) {
                                                                                                                        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Just.create(v.value0(mbForm)));
                                                                                                                    });
                                                                                                                });
                                                                                                            });
                                                                                                        };
                                                                                                        if (v instanceof Formless_Types_Component.SendQuery) {
                                                                                                            return Halogen_Query_HalogenM.HalogenM(Control_Monad_Free.liftF(new Halogen_Query_HalogenM.ChildQuery(v.value0)));
                                                                                                        };
                                                                                                        if (v instanceof Formless_Types_Component.AsQuery) {
                                                                                                            return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)))(handleEvent)(Data_Variant.expand()(v.value0)));
                                                                                                        };
                                                                                                        throw new Error("Failed pattern match at Formless.Component (line 368, column 12 - line 382, column 44): " + [ v.constructor.name ]);
                                                                                                    },
                                                                                                    userQuery: function (q) {
                                                                                                        return handleQuery$prime(q);
                                                                                                    }
                                                                                                });
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var defaultSpec = {
    render: Data_Function["const"](Halogen_HTML_Core.text(Data_Monoid.mempty(Data_Monoid.monoidString))),
    handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
    handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
    handleEvent: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
    receive: Data_Function["const"](Data_Maybe.Nothing.value),
    initialize: Data_Maybe.Nothing.value,
    finalize: Data_Maybe.Nothing.value
};
var component = function (dictMonadAff) {
    return function (dictRowToList) {
        return function (dictRowToList1) {
            return function (dictEqRecord) {
                return function (dictInputFieldsToFormFields) {
                    return function (dictFormFieldsToInputFields) {
                        return function (dictCountErrors) {
                            return function (dictAllTouched) {
                                return function (dictSetFormFieldsTouched) {
                                    return function (dictReplaceFormFieldInputs) {
                                        return function (dictModifyAll) {
                                            return function (dictValidateAll) {
                                                return function (dictFormFieldToMaybeOutput) {
                                                    return function (dictMakeInputFieldsFromRow) {
                                                        return function (dictNewtype) {
                                                            return function (dictNewtype1) {
                                                                return function (dictNewtype2) {
                                                                    return function (dictNewtype3) {
                                                                        return function (dictNewtype4) {
                                                                            return function (dictNewtype5) {
                                                                                return function (dictNewtype6) {
                                                                                    return function (dictNewtype7) {
                                                                                        return function (dictLacks) {
                                                                                            return function (dictLacks1) {
                                                                                                return function (dictLacks2) {
                                                                                                    return function (dictLacks3) {
                                                                                                        return function (dictLacks4) {
                                                                                                            return function (dictLacks5) {
                                                                                                                return function (dictLacks6) {
                                                                                                                    return function (dictLacks7) {
                                                                                                                        return function (dictLacks8) {
                                                                                                                            return function (mkInput) {
                                                                                                                                return function (spec) {
                                                                                                                                    var initialState = function (input) {
                                                                                                                                        var initialInputs = (function () {
                                                                                                                                            if (input.initialInputs instanceof Data_Maybe.Nothing) {
                                                                                                                                                return Formless_Transform_Row.mkInputFields()(dictNewtype)(dictMakeInputFieldsFromRow)(Formless_Types_Form.FormProxy.value);
                                                                                                                                            };
                                                                                                                                            if (input.initialInputs instanceof Data_Maybe.Just) {
                                                                                                                                                return input.initialInputs.value0;
                                                                                                                                            };
                                                                                                                                            throw new Error("Failed pattern match at Formless.Component (line 138, column 21 - line 140, column 28): " + [ input.initialInputs.constructor.name ]);
                                                                                                                                        })();
                                                                                                                                        var internalState = {
                                                                                                                                            allTouched: false,
                                                                                                                                            initialInputs: initialInputs,
                                                                                                                                            validators: input.validators,
                                                                                                                                            debounceRef: Data_Maybe.Nothing.value,
                                                                                                                                            validationRef: Data_Maybe.Nothing.value
                                                                                                                                        };
                                                                                                                                        var initialForm = Formless_Internal_Transform.inputFieldsToFormFields()(dictInputFieldsToFormFields)(dictNewtype)(dictNewtype2)(initialInputs);
                                                                                                                                        var pipeline = Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "validators";
                                                                                                                                        }))()()(Data_Symbol.SProxy.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "initialInputs";
                                                                                                                                        }))()()(Data_Symbol.SProxy.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "validity";
                                                                                                                                        }))(Data_Symbol.SProxy.value)(Formless_Types_Component.Incomplete.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "dirty";
                                                                                                                                        }))(Data_Symbol.SProxy.value)(false))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "errors";
                                                                                                                                        }))(Data_Symbol.SProxy.value)(0))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "submitAttempts";
                                                                                                                                        }))(Data_Symbol.SProxy.value)(0))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "submitting";
                                                                                                                                        }))(Data_Symbol.SProxy.value)(false))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "form";
                                                                                                                                        }))(Data_Symbol.SProxy.value)(initialForm))(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                            return "internal";
                                                                                                                                        }))(Data_Symbol.SProxy.value)(internalState)))))))));
                                                                                                                                        return Record_Builder.build(pipeline)(input);
                                                                                                                                    };
                                                                                                                                    return Halogen_Component.mkComponent({
                                                                                                                                        initialState: function ($2097) {
                                                                                                                                            return initialState(mkInput($2097));
                                                                                                                                        },
                                                                                                                                        render: (function () {
                                                                                                                                            var $2098 = Formless_Internal_Component.getPublicState();
                                                                                                                                            return function ($2099) {
                                                                                                                                                return spec.render($2098($2099));
                                                                                                                                            };
                                                                                                                                        })(),
                                                                                                                                        "eval": Halogen_Component.mkEval({
                                                                                                                                            handleQuery: function (q) {
                                                                                                                                                return handleQuery(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(spec.handleQuery)(spec.handleEvent)(q);
                                                                                                                                            },
                                                                                                                                            handleAction: function (act) {
                                                                                                                                                return handleAction(dictMonadAff)()()(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)()(spec.handleAction)(spec.handleEvent)(act);
                                                                                                                                            },
                                                                                                                                            initialize: new Data_Maybe.Just(Data_Variant.inj()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                                                                                                                                return "initialize";
                                                                                                                                            }))(Data_Symbol.SProxy.value)(spec.initialize)),
                                                                                                                                            receive: Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Action.injAction))(spec.receive),
                                                                                                                                            finalize: Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Action.injAction)(spec.finalize)
                                                                                                                                        })
                                                                                                                                    });
                                                                                                                                };
                                                                                                                            };
                                                                                                                        };
                                                                                                                    };
                                                                                                                };
                                                                                                            };
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
module.exports = {
    defaultSpec: defaultSpec,
    raiseResult: raiseResult,
    component: component,
    handleAction: handleAction,
    handleQuery: handleQuery
};
