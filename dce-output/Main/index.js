// Generated by purs version 0.13.6
import * as Affjax from "../Affjax/index.js";
import * as Conduit_Api_Endpoint from "../Conduit.Api.Endpoint/index.js";
import * as Conduit_Api_Request from "../Conduit.Api.Request/index.js";
import * as Conduit_AppM from "../Conduit.AppM/index.js";
import * as Conduit_Component_Router from "../Conduit.Component.Router/index.js";
import * as Conduit_Data_Avatar from "../Conduit.Data.Avatar/index.js";
import * as Conduit_Data_Route from "../Conduit.Data.Route/index.js";
import * as Conduit_Data_Username from "../Conduit.Data.Username/index.js";
import * as Conduit_Data_Utils from "../Conduit.Data.Utils/index.js";
import * as Conduit_Env from "../Conduit.Env/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Argonaut_Decode_Class from "../Data.Argonaut.Decode.Class/index.js";
import * as Data_Argonaut_Decode_Struct_Tolerant_DecodeJson from "../Data.Argonaut.Decode.Struct.Tolerant.DecodeJson/index.js";
import * as Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson from "../Data.Argonaut.Decode.Struct.Tolerant.GDecodeJson/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Operator_Top from "../Data.Operator.Top/index.js";
import * as Data_Struct_Insert_RInsert from "../Data.Struct.Insert.RInsert/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Aff_Bus from "../Effect.Aff.Bus/index.js";
import * as Effect_Aff_Class from "../Effect.Aff.Class/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Effect_Ref from "../Effect.Ref/index.js";
import * as Halogen_Aff_Util from "../Halogen.Aff.Util/index.js";
import * as Halogen_Component from "../Halogen.Component/index.js";
import * as Halogen_HTML_Core from "../Halogen.HTML.Core/index.js";
import * as Halogen_Query from "../Halogen.Query/index.js";
import * as Halogen_VDom_Driver from "../Halogen.VDom.Driver/index.js";
import * as Record_Builder from "../Record.Builder/index.js";
import * as Routing_Duplex from "../Routing.Duplex/index.js";
import * as Routing_Hash from "../Routing.Hash/index.js";
import * as Type_Equality from "../Type.Equality/index.js";
import * as Type_Proxying_Symbol from "../Type.Proxying.Symbol/index.js";
var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (body) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (currentUser) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Aff_Bus.make(Effect_Class.monadEffectEffect)))(function (userBus) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Conduit_Api_Request.readToken))(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(function (token) {
                var requestOptions = {
                    endpoint: Conduit_Api_Endpoint.User.value,
                    method: Conduit_Api_Request.Get.value
                };
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffAff)(Affjax.request(Conduit_Api_Request.defaultRequest("https://conduit.productionready.io")(new Data_Maybe.Just(token))(requestOptions))))(function (res) {
                    var u = Control_Bind.bindFlipped(Data_Either.bindEither)(Conduit_Data_Utils.decodeAt(Data_Argonaut_Decode_Struct_Tolerant_DecodeJson.decodeJsonRecord(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_Plus()(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_Plus()(Data_Argonaut_Decode_Class.decodeJsonMaybe(Conduit_Data_Avatar.decodeJsonAvatar))(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_nonPlus()(Conduit_Data_Username.decodeJsonUsername)(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_NilNilNil(Record_Builder.categoryBuilder)(Data_Operator_Top.top1_Either))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))()(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))()(Data_Maybe.plusMaybe)(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))()(Data_Maybe.plusMaybe)(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))())("user"))(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(Affjax.printError)(function (v) {
                        return v.body;
                    })(res));
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(Data_Either.hush(u))(currentUser));
                });
            })))(function ($dollar__unused) {
                var environment = (function () {
                    var userEnv = {
                        currentUser: currentUser,
                        userBus: userBus
                    };
                    return {
                        baseUrl: "https://conduit.productionready.io",
                        logLevel: Conduit_Env.Dev.value,
                        userEnv: userEnv
                    };
                })();
                var rootComponent = Halogen_Component.hoist(Halogen_HTML_Core.bifunctorHTML)(Effect_Aff.functorAff)(Conduit_AppM.runAppM(environment))(Conduit_Component_Router.component(Conduit_AppM.monadAffAppM)(Conduit_AppM.monadAskAppM(Type_Equality.refl))(Conduit_AppM.nowAppM)(Conduit_AppM.logMessagesAppM)(Conduit_AppM.navigateAppM)(Conduit_AppM.manageUserAppM)(Conduit_AppM.manageArticleAppM)(Conduit_AppM.manageCommentAppM)(Conduit_AppM.manageTagAppM));
                return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(rootComponent)({})(body))(function (halogenIO) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.matchesWith(Data_Either.foldableEither)(Routing_Duplex.parse(Conduit_Data_Route.routeCodec))(function (old) {
                        return function ($$new) {
                            return Control_Applicative.when(Effect.applicativeEffect)(Data_Eq.notEq(Data_Maybe.eqMaybe(Conduit_Data_Route.eqRoute))(old)(new Data_Maybe.Just($$new)))(Effect_Aff.launchAff_(halogenIO.query(Halogen_Query.tell(Conduit_Component_Router.Navigate.create($$new)))));
                        };
                    }))))(function ($dollar__unused) {
                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
                    });
                });
            });
        });
    });
}));
export {
    main
};
