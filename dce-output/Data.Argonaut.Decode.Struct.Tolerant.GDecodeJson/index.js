// Generated by purs version 0.13.6
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Category from "../Control.Category/index.js";
import * as Control_Plus from "../Control.Plus/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Argonaut_Decode_Class from "../Data.Argonaut.Decode.Class/index.js";
import * as Data_Argonaut_Decode_Struct_Utils from "../Data.Argonaut.Decode.Struct.Utils/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Operator_Bottom from "../Data.Operator.Bottom/index.js";
import * as Data_Operator_Top from "../Data.Operator.Top/index.js";
import * as Data_Struct_Insert_RInsert from "../Data.Struct.Insert.RInsert/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
import * as Type_Data_RowList from "../Type.Data.RowList/index.js";
var GDecodeJson = function (gDecodeJson) {
    this.gDecodeJson = gDecodeJson;
};
var gDecodeJson_NilNilNil = function (dictCategory) {
    return function (dictTop1_) {
        return new GDecodeJson(function (v) {
            return function (v1) {
                return function (v2) {
                    return Data_Operator_Top.top1_(dictTop1_)(Control_Category.identity(dictCategory));
                };
            };
        });
    };
};
var gDecodeJson = function (dict) {
    return dict.gDecodeJson;
};
var gDecodeJson_ConsNilCons_Plus = function (dictCons) {
    return function (dictDecodeJson) {
        return function (dictGDecodeJson) {
            return function (dictIsSymbol) {
                return function (dictLacks) {
                    return function (dictPlus) {
                        return function (dictRInsert) {
                            return function (dictSemigroupoid) {
                                return new GDecodeJson(function (v) {
                                    return function (v1) {
                                        return function (object) {
                                            var fieldName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                            return Control_Bind.bind(Data_Either.bindEither)(gDecodeJson(dictGDecodeJson)(Type_Data_RowList.RLProxy.value)(Type_Data_RowList.RLProxy.value)(object))(function (doRest) {
                                                var v2 = Foreign_Object.lookup(fieldName)(object);
                                                if (v2 instanceof Data_Maybe.Just) {
                                                    return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(v2.value0))(function (v3) {
                                                        return Data_Operator_Top.top1_(Data_Operator_Top.top1_Either)(Control_Semigroupoid.compose(dictSemigroupoid)(Data_Struct_Insert_RInsert.rinsert(dictRInsert)()()(Type_Data_RowList.RLProxy.value)(Type_Data_RowList.RLProxy.value)(Data_Symbol.SProxy.value)(v3))(doRest));
                                                    });
                                                };
                                                if (v2 instanceof Data_Maybe.Nothing) {
                                                    return Data_Operator_Top.top1_(Data_Operator_Top.top1_Either)(Control_Semigroupoid.compose(dictSemigroupoid)(Data_Struct_Insert_RInsert.rinsert(dictRInsert)()()(Type_Data_RowList.RLProxy.value)(Type_Data_RowList.RLProxy.value)(Data_Symbol.SProxy.value)(Control_Plus.empty(dictPlus)))(doRest));
                                                };
                                                throw new Error("Failed pattern match at Data.Argonaut.Decode.Struct.Tolerant.GDecodeJson (line 62, column 5 - line 67, column 57): " + [ v2.constructor.name ]);
                                            });
                                        };
                                    };
                                });
                            };
                        };
                    };
                };
            };
        };
    };
};
var gDecodeJson_ConsNilCons_nonPlus = function (dictCons) {
    return function (dictDecodeJson) {
        return function (dictGDecodeJson) {
            return function (dictIsSymbol) {
                return function (dictLacks) {
                    return function (dictRInsert) {
                        return function (dictSemigroupoid) {
                            return new GDecodeJson(function (v) {
                                return function (v1) {
                                    return function (object) {
                                        var fieldName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                        var v2 = Foreign_Object.lookup(fieldName)(object);
                                        if (v2 instanceof Data_Maybe.Just) {
                                            return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson)(v2.value0))(function (val) {
                                                return Control_Bind.bind(Data_Either.bindEither)(gDecodeJson(dictGDecodeJson)(Type_Data_RowList.RLProxy.value)(Type_Data_RowList.RLProxy.value)(object))(function (doRest) {
                                                    return Data_Operator_Top.top1_(Data_Operator_Top.top1_Either)(Control_Semigroupoid.compose(dictSemigroupoid)(Data_Struct_Insert_RInsert.rinsert(dictRInsert)()()(Type_Data_RowList.RLProxy.value)(Type_Data_RowList.RLProxy.value)(Data_Symbol.SProxy.value)(val))(doRest));
                                                });
                                            });
                                        };
                                        if (v2 instanceof Data_Maybe.Nothing) {
                                            return Data_Operator_Bottom.bottom2(Data_Operator_Bottom.bottom2Either)(Data_Argonaut_Decode_Struct_Utils.getMissingFieldErrorMessage(fieldName));
                                        };
                                        throw new Error("Failed pattern match at Data.Argonaut.Decode.Struct.Tolerant.GDecodeJson (line 89, column 5 - line 95, column 56): " + [ v2.constructor.name ]);
                                    };
                                };
                            });
                        };
                    };
                };
            };
        };
    };
};
export {
    GDecodeJson,
    gDecodeJson,
    gDecodeJson_NilNilNil,
    gDecodeJson_ConsNilCons_Plus,
    gDecodeJson_ConsNilCons_nonPlus
};
