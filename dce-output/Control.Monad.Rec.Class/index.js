// Generated by purs version 0.13.8
"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Loop = (function () {
    function Loop(value0) {
        this.value0 = value0;
    };
    Loop.create = function (value0) {
        return new Loop(value0);
    };
    return Loop;
})();
var Done = (function () {
    function Done(value0) {
        this.value0 = value0;
    };
    Done.create = function (value0) {
        return new Done(value0);
    };
    return Done;
})();
var MonadRec = function (Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
};
var tailRecM = function (dict) {
    return dict.tailRecM;
};
var monadRecEffect = new MonadRec(function ($dollar__unused) {
    return Effect.monadEffect;
}, function (f) {
    return function (a) {
        var fromDone = function (v) {
            if (v instanceof Done) {
                return v.value0;
            };
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [ v.constructor.name ]);
        };
        return function __do() {
            var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect.bindEffect)(Effect.untilE(function __do() {
                var v = Effect_Ref.read(r)();
                if (v instanceof Loop) {
                    var e = f(v.value0)();
                    var $dollar__unused = Effect_Ref.write(e)(r)();
                    return false;
                };
                if (v instanceof Done) {
                    return true;
                };
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [ v.constructor.name ]);
            }))(function ($dollar__unused) {
                return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r));
            })();
        };
    };
});
var forever = function (dictMonadRec) {
    return function (ma) {
        return tailRecM(dictMonadRec)(function (u) {
            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);
        })(Data_Unit.unit);
    };
};
module.exports = {
    Loop: Loop,
    Done: Done,
    MonadRec: MonadRec,
    tailRecM: tailRecM,
    forever: forever,
    monadRecEffect: monadRecEffect
};
