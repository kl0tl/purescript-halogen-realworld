// Generated by purs version 0.13.6
import * as Halogen_VDom_DOM from "../Halogen.VDom.DOM/index.js";
import * as Halogen_VDom_Machine from "../Halogen.VDom.Machine/index.js";
import * as Halogen_VDom_Util from "../Halogen.VDom.Util/index.js";
var Thunk = (function () {
    function Thunk(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Thunk.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Thunk(value0, value1, value2, value3);
                };
            };
        };
    };
    return Thunk;
})();
var unsafeEqThunk = function (v, v1) {
    return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && Halogen_VDom_Util.refEq(v.value3, v1.value3));
};
var runThunk = function (v) {
    return v.value2(v.value3);
};
var mapThunk = function (k) {
    return function (v) {
        return new Thunk(v.value0, v.value1, function ($2670) {
            return k(v.value2($2670));
        }, v.value3);
    };
};
var hoist = mapThunk;
var buildThunk = function (toVDom) {
    var haltThunk = function (state) {
        return Halogen_VDom_Machine.halt(state.vdom);
    };
    var patchThunk = function (state, t2) {
        var $2667 = unsafeEqThunk(state.thunk, t2);
        if ($2667) {
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
        };
        var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
            vdom: vdom,
            thunk: t2
        }, patchThunk, haltThunk));
    };
    var renderThunk = function (spec) {
        return function (t) {
            var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                thunk: t,
                vdom: vdom
            }, patchThunk, haltThunk));
        };
    };
    return renderThunk;
};
export {
    buildThunk,
    runThunk,
    hoist,
    mapThunk
};
