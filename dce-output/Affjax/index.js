// Generated by purs version 0.13.6
import * as $foreign from "./foreign.js";
import * as Affjax_RequestBody from "../Affjax.RequestBody/index.js";
import * as Affjax_RequestHeader from "../Affjax.RequestHeader/index.js";
import * as Affjax_ResponseFormat from "../Affjax.ResponseFormat/index.js";
import * as Affjax_ResponseHeader from "../Affjax.ResponseHeader/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Control_Monad_Except from "../Control.Monad.Except/index.js";
import * as Control_Monad_Except_Trans from "../Control.Monad.Except.Trans/index.js";
import * as Data_Argonaut_Core from "../Data.Argonaut.Core/index.js";
import * as Data_Argonaut_Parser from "../Data.Argonaut.Parser/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_FormURLEncoded from "../Data.FormURLEncoded/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_HTTP_Method from "../Data.HTTP.Method/index.js";
import * as Data_HeytingAlgebra from "../Data.HeytingAlgebra/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_List_NonEmpty from "../Data.List.NonEmpty/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Nullable from "../Data.Nullable/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Aff_Compat from "../Effect.Aff.Compat/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Foreign from "../Foreign/index.js";
var RequestContentError = (function () {
    function RequestContentError(value0) {
        this.value0 = value0;
    };
    RequestContentError.create = function (value0) {
        return new RequestContentError(value0);
    };
    return RequestContentError;
})();
var ResponseBodyError = (function () {
    function ResponseBodyError(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ResponseBodyError.create = function (value0) {
        return function (value1) {
            return new ResponseBodyError(value0, value1);
        };
    };
    return ResponseBodyError;
})();
var XHRError = (function () {
    function XHRError(value0) {
        this.value0 = value0;
    };
    XHRError.create = function (value0) {
        return new XHRError(value0);
    };
    return XHRError;
})();
var request = function (req) {
    var parseJSON = function (v) {
        if (v === "") {
            return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
        };
        return Data_Either.either(function ($34) {
            return Foreign.fail(Foreign.ForeignError.create($34));
        })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
    };
    var fromResponse = (function () {
        if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
            return Foreign.unsafeReadTagged("ArrayBuffer");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
            return Foreign.unsafeReadTagged("Blob");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
            return Foreign.unsafeReadTagged("Document");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
            return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($35) {
                return req.responseFormat.value0(parseJSON($35));
            })(Foreign.unsafeReadTagged("String"));
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
            return Foreign.unsafeReadTagged("String");
        };
        if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
            return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
        };
        throw new Error("Failed pattern match at Affjax (line 237, column 18 - line 243, column 57): " + [ req.responseFormat.constructor.name ]);
    })();
    var extractContent = function (v) {
        if (v instanceof Affjax_RequestBody.ArrayView) {
            return Data_Either.Right.create(v.value0(Foreign.unsafeToForeign));
        };
        if (v instanceof Affjax_RequestBody.Blob) {
            return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
        };
        if (v instanceof Affjax_RequestBody.Document) {
            return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
        };
        if (v instanceof Affjax_RequestBody["String"]) {
            return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
        };
        if (v instanceof Affjax_RequestBody.FormData) {
            return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
        };
        if (v instanceof Affjax_RequestBody.FormURLEncoded) {
            return Data_Either.note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(Data_Functor.map(Data_Maybe.functorMaybe)(Foreign.unsafeToForeign)(Data_FormURLEncoded.encode(v.value0)));
        };
        if (v instanceof Affjax_RequestBody.Json) {
            return Data_Either.Right.create(Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0)));
        };
        throw new Error("Failed pattern match at Affjax (line 203, column 20 - line 218, column 69): " + [ v.constructor.name ]);
    };
    var addHeader = function (mh) {
        return function (hs) {
            if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
                return Data_Array.snoc(hs)(mh.value0);
            };
            return hs;
        };
    };
    var headers = function (reqContent) {
        return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
    };
    var ajaxRequest = function (v) {
        return {
            method: Data_HTTP_Method.print(req.method),
            url: req.url,
            headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                return {
                    field: Affjax_RequestHeader.name(h),
                    value: Affjax_RequestHeader.value(h)
                };
            })(headers(req.content)),
            content: v,
            responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
            username: Data_Nullable.toNullable(req.username),
            password: Data_Nullable.toNullable(req.password),
            withCredentials: req.withCredentials
        };
    };
    var send = function (content) {
        return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"](Affjax_ResponseHeader.ResponseHeader.create, ajaxRequest(content)))))(function (v) {
            if (v instanceof Data_Either.Right) {
                var v1 = Control_Monad_Except.runExcept(fromResponse(v.value0.body));
                if (v1 instanceof Data_Either.Left) {
                    return new Data_Either.Left(new ResponseBodyError(Data_List_NonEmpty.head(v1.value0), v.value0));
                };
                if (v1 instanceof Data_Either.Right) {
                    return new Data_Either.Right({
                        body: v1.value0,
                        headers: v.value0.headers,
                        status: v.value0.status,
                        statusText: v.value0.statusText
                    });
                };
                throw new Error("Failed pattern match at Affjax (line 184, column 9 - line 186, column 52): " + [ v1.constructor.name ]);
            };
            if (v instanceof Data_Either.Left) {
                return new Data_Either.Left(new XHRError(v.value0));
            };
            throw new Error("Failed pattern match at Affjax (line 182, column 86 - line 188, column 28): " + [ v.constructor.name ]);
        });
    };
    if (req.content instanceof Data_Maybe.Nothing) {
        return send(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
    };
    if (req.content instanceof Data_Maybe.Just) {
        var v = extractContent(req.content.value0);
        if (v instanceof Data_Either.Right) {
            return send(Data_Nullable.toNullable(new Data_Maybe.Just(v.value0)));
        };
        if (v instanceof Data_Either.Left) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(new RequestContentError(v.value0)));
        };
        throw new Error("Failed pattern match at Affjax (line 173, column 7 - line 177, column 48): " + [ v.constructor.name ]);
    };
    throw new Error("Failed pattern match at Affjax (line 169, column 3 - line 177, column 48): " + [ req.content.constructor.name ]);
};
var printError = function (v) {
    if (v instanceof RequestContentError) {
        return "There was a problem with the request content: " + v.value0;
    };
    if (v instanceof ResponseBodyError) {
        return "There was a problem with the response body: " + Foreign.renderForeignError(v.value0);
    };
    if (v instanceof XHRError) {
        return "There was a problem making the request: " + Effect_Exception.message(v.value0);
    };
    throw new Error("Failed pattern match at Affjax (line 91, column 14 - line 97, column 66): " + [ v.constructor.name ]);
};
export {
    RequestContentError,
    ResponseBodyError,
    XHRError,
    printError,
    request
};
