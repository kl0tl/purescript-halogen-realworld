// Generated by purs version 0.13.6
import * as Control_Category from "../Control.Category/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Global_Unsafe from "../Global.Unsafe/index.js";
import * as Routing_Duplex_Types from "../Routing.Duplex.Types/index.js";
var RoutePrinter = function (x) {
    return x;
};
var semigroupRoutePrinter = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return function ($2946) {
            return v1(v($2946));
        };
    };
});
var put = function (str) {
    return function (state) {
        return {
            segments: Data_Array.snoc(state.segments)(str),
            params: state.params,
            hash: state.hash
        };
    };
};
var printPath = function (v) {
    var printSegments = function (v1) {
        if (v1.length === 1 && v1[0] === "") {
            return "/";
        };
        return Data_String_Common.joinWith("/")(Data_Functor.map(Data_Functor.functorArray)(Global_Unsafe.unsafeEncodeURIComponent)(v1));
    };
    var printParam = function (key) {
        return function (v1) {
            if (v1 === "") {
                return Global_Unsafe.unsafeEncodeURIComponent(key);
            };
            return Global_Unsafe.unsafeEncodeURIComponent(key) + ("=" + Global_Unsafe.unsafeEncodeURIComponent(v1));
        };
    };
    var printParams = function (v1) {
        if (v1.length === 0) {
            return "";
        };
        return "?" + Data_String_Common.joinWith("&")(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(printParam))(v1));
    };
    var printHash = function (v1) {
        if (v1 === "") {
            return "";
        };
        return "#" + v1;
    };
    return printSegments(v.segments) + (printParams(v.params) + printHash(v.hash));
};
var param = function (key) {
    return function (val) {
        return function (state) {
            return {
                segments: state.segments,
                params: Data_Array.cons(new Data_Tuple.Tuple(key, val))(state.params),
                hash: state.hash
            };
        };
    };
};
var newtypeRoutePrinter = new Data_Newtype.Newtype(function (n) {
    return n;
}, RoutePrinter);
var run = (function () {
    var $2947 = Data_Function.applyFlipped(Routing_Duplex_Types.emptyRouteState);
    var $2948 = Data_Newtype.unwrap(newtypeRoutePrinter);
    return function ($2949) {
        return printPath($2947($2948($2949)));
    };
})();
var monoidRoutePRinter = new Data_Monoid.Monoid(function ($dollar__unused) {
    return semigroupRoutePrinter;
}, Control_Category.identity(Control_Category.categoryFn));
export {
    RoutePrinter,
    put,
    param,
    run,
    printPath,
    newtypeRoutePrinter,
    semigroupRoutePrinter,
    monoidRoutePRinter
};
