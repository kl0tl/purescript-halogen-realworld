// Generated by purs version 0.13.6
import * as Conduit_Component_Utils from "../Conduit.Component.Utils/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Reader_Class from "../Control.Monad.Reader.Class/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Effect_Ref from "../Effect.Ref/index.js";
import * as Halogen_Component from "../Halogen.Component/index.js";
import * as Halogen_HTML from "../Halogen.HTML/index.js";
import * as Halogen_Query_EventSource from "../Halogen.Query.EventSource/index.js";
import * as Halogen_Query_HalogenM from "../Halogen.Query.HalogenM/index.js";
import * as Record from "../Record/index.js";
var Initialize = (function () {
    function Initialize() {

    };
    Initialize.value = new Initialize();
    return Initialize;
})();
var HandleUserBus = (function () {
    function HandleUserBus(value0) {
        this.value0 = value0;
    };
    HandleUserBus.create = function (value0) {
        return new HandleUserBus(value0);
    };
    return HandleUserBus;
})();
var Receive = (function () {
    function Receive(value0) {
        this.value0 = value0;
    };
    Receive.create = function (value0) {
        return new Receive(value0);
    };
    return Receive;
})();
var Emit = (function () {
    function Emit(value0) {
        this.value0 = value0;
    };
    Emit.create = function (value0) {
        return new Emit(value0);
    };
    return Emit;
})();
var _inner = Data_Symbol.SProxy.value;
var component = function (dictMonadAff) {
    return function (dictMonadAsk) {
        return function (dictLacks) {
            return function (innerComponent) {
                var render = function (state) {
                    return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "inner";
                    }))(Data_Ord.ordUnit)(_inner)(Data_Unit.unit)(innerComponent)(state)(function ($73) {
                        return Data_Maybe.Just.create(Emit.create($73));
                    });
                };
                var handleQuery = Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                    return "inner";
                }))(Data_Ord.ordUnit)(_inner)(Data_Unit.unit);
                var handleAction = function (v) {
                    if (v instanceof Initialize) {
                        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Reader_Class.asks(Halogen_Query_HalogenM.monadAskHalogenM(dictMonadAsk))(function (v1) {
                            return v1.userEnv;
                        }))(function (v1) {
                            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.subscribe(Data_Functor.map(Halogen_Query_EventSource.functorEventSource(((((dictMonadAff.MonadEffect0()).Monad0()).Bind1()).Apply0()).Functor0()))(HandleUserBus.create)(Conduit_Component_Utils.busEventSource(dictMonadAff)(v1.userBus))))(function ($dollar__unused) {
                                return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref.read(v1.currentUser)))(function (mbProfile) {
                                    return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                        var $60 = {};
                                        for (var $61 in v2) {
                                            if ({}.hasOwnProperty.call(v2, $61)) {
                                                $60[$61] = v2[$61];
                                            };
                                        };
                                        $60.currentUser = mbProfile;
                                        return $60;
                                    });
                                });
                            });
                        });
                    };
                    if (v instanceof HandleUserBus) {
                        return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                            var $65 = {};
                            for (var $66 in v1) {
                                if ({}.hasOwnProperty.call(v1, $66)) {
                                    $65[$66] = v1[$66];
                                };
                            };
                            $65.currentUser = v.value0;
                            return $65;
                        });
                    };
                    if (v instanceof Receive) {
                        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                            return Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(Record.insert(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                return "currentUser";
                            }))()()(Data_Symbol.SProxy.value)(v1.currentUser)(v.value0));
                        });
                    };
                    if (v instanceof Emit) {
                        return Halogen_Query_HalogenM.raise(v.value0);
                    };
                    throw new Error("Failed pattern match at Component.HOC.Connect (line 60, column 18 - line 80, column 21): " + [ v.constructor.name ]);
                };
                return Halogen_Component.mkComponent({
                    initialState: Record.insert(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "currentUser";
                    }))()()(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value),
                    render: render,
                    "eval": Halogen_Component.mkEval({
                        handleAction: handleAction,
                        handleQuery: handleQuery,
                        receive: function ($74) {
                            return Data_Maybe.Just.create(Receive.create($74));
                        },
                        initialize: new Data_Maybe.Just(Initialize.value),
                        finalize: Halogen_Component.defaultEval.finalize
                    })
                });
            };
        };
    };
};
export {
    Initialize,
    HandleUserBus,
    Receive,
    Emit,
    _inner,
    component
};
