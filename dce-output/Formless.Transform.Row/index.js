// Generated by purs version 0.13.6
import * as Control_Category from "../Control.Category/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Formless_Class_Initial from "../Formless.Class.Initial/index.js";
import * as Formless_Internal_Transform from "../Formless.Internal.Transform/index.js";
import * as Record_Builder from "../Record.Builder/index.js";
import * as Type_Data_Row from "../Type.Data.Row/index.js";
import * as Type_Data_RowList from "../Type.Data.RowList/index.js";
var MakeSProxies = function (makeSProxiesBuilder) {
    this.makeSProxiesBuilder = makeSProxiesBuilder;
};
var MakeInputFieldsFromRow = function (mkInputFieldsFromRowBuilder) {
    this.mkInputFieldsFromRowBuilder = mkInputFieldsFromRowBuilder;
};
var mkInputFieldsFromRowNil = new MakeInputFieldsFromRow(function (v) {
    return function (v1) {
        return Control_Category.identity(Record_Builder.categoryBuilder);
    };
});
var mkInputFieldsFromRowBuilder = function (dict) {
    return dict.mkInputFieldsFromRowBuilder;
};
var mkInputFieldsFromRowCons = function (dictIsSymbol) {
    return function (dictInitial) {
        return function (dictCons) {
            return function (dictMakeInputFieldsFromRow) {
                return function (dictRow1Cons) {
                    return new MakeInputFieldsFromRow(function (v) {
                        return function (r) {
                            var val = Formless_Class_Initial.initial(dictInitial);
                            var rest = mkInputFieldsFromRowBuilder(dictMakeInputFieldsFromRow)(Type_Data_RowList.RLProxy.value)(r);
                            var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                            return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                        };
                    });
                };
            };
        };
    };
};
var mkInputFields = function (dictRowToList) {
    return function (dictNewtype) {
        return function (dictMakeInputFieldsFromRow) {
            return function (v) {
                var builder = mkInputFieldsFromRowBuilder(dictMakeInputFieldsFromRow)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
                return Data_Newtype.wrap(dictNewtype)(Formless_Internal_Transform.fromScratch(builder));
            };
        };
    };
};
var makeSProxiesNil = new MakeSProxies(function (v) {
    return Control_Category.identity(Record_Builder.categoryBuilder);
});
var makeSProxiesBuilder = function (dict) {
    return dict.makeSProxiesBuilder;
};
var makeSProxiesCons = function (dictIsSymbol) {
    return function (dictRow1Cons) {
        return function (dictMakeSProxies) {
            return new MakeSProxies(function (v) {
                var rest = makeSProxiesBuilder(dictMakeSProxies)(Type_Data_RowList.RLProxy.value);
                var first = Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(Data_Symbol.SProxy.value);
                return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
            });
        };
    };
};
var mkSProxies = function (dictRowToList) {
    return function (dictNewtype) {
        return function (dictMakeSProxies) {
            return function (v) {
                var builder = makeSProxiesBuilder(dictMakeSProxies)(Type_Data_RowList.RLProxy.value);
                return Formless_Internal_Transform.fromScratch(builder);
            };
        };
    };
};
export {
    makeSProxiesBuilder,
    mkInputFieldsFromRowBuilder,
    mkInputFields,
    MakeInputFieldsFromRow,
    mkSProxies,
    MakeSProxies,
    mkInputFieldsFromRowNil,
    mkInputFieldsFromRowCons,
    makeSProxiesNil,
    makeSProxiesCons
};
