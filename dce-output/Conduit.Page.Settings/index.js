// Generated by purs version 0.13.6
import * as Conduit_Capability_Navigate from "../Conduit.Capability.Navigate/index.js";
import * as Conduit_Capability_Resource_User from "../Conduit.Capability.Resource.User/index.js";
import * as Conduit_Component_HTML_Header from "../Conduit.Component.HTML.Header/index.js";
import * as Conduit_Component_HTML_Utils from "../Conduit.Component.HTML.Utils/index.js";
import * as Conduit_Data_Avatar from "../Conduit.Data.Avatar/index.js";
import * as Conduit_Data_Email from "../Conduit.Data.Email/index.js";
import * as Conduit_Data_Route from "../Conduit.Data.Route/index.js";
import * as Conduit_Data_Username from "../Conduit.Data.Username/index.js";
import * as Conduit_Form_Field from "../Conduit.Form.Field/index.js";
import * as Conduit_Form_Validation from "../Conduit.Form.Validation/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as DOM_HTML_Indexed_InputType from "../DOM.HTML.Indexed.InputType/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Lens_Fold from "../Data.Lens.Fold/index.js";
import * as Data_Lens_Internal_Forget from "../Data.Lens.Internal.Forget/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Maybe_First from "../Data.Maybe.First/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Formless_Action from "../Formless.Action/index.js";
import * as Formless_Class_Initial from "../Formless.Class.Initial/index.js";
import * as Formless_Component from "../Formless.Component/index.js";
import * as Formless_Internal_Transform from "../Formless.Internal.Transform/index.js";
import * as Formless_Query from "../Formless.Query/index.js";
import * as Formless_Retrieve from "../Formless.Retrieve/index.js";
import * as Formless_Transform_Record from "../Formless.Transform.Record/index.js";
import * as Formless_Transform_Row from "../Formless.Transform.Row/index.js";
import * as Formless_Types_Component from "../Formless.Types.Component/index.js";
import * as Formless_Types_Form from "../Formless.Types.Form/index.js";
import * as Formless_Validation from "../Formless.Validation/index.js";
import * as Halogen_Component from "../Halogen.Component/index.js";
import * as Halogen_HTML from "../Halogen.HTML/index.js";
import * as Halogen_HTML_Core from "../Halogen.HTML.Core/index.js";
import * as Halogen_HTML_Elements from "../Halogen.HTML.Elements/index.js";
import * as Halogen_HTML_Events from "../Halogen.HTML.Events/index.js";
import * as Halogen_HTML_Properties from "../Halogen.HTML.Properties/index.js";
import * as Halogen_Query_HalogenM from "../Halogen.Query.HalogenM/index.js";
import * as Heterogeneous_Mapping from "../Heterogeneous.Mapping/index.js";
import * as Network_RemoteData from "../Network.RemoteData/index.js";
var SettingsForm = function (x) {
    return x;
};
var Initialize = (function () {
    function Initialize() {

    };
    Initialize.value = new Initialize();
    return Initialize;
})();
var HandleForm = (function () {
    function HandleForm(value0) {
        this.value0 = value0;
    };
    HandleForm.create = function (value0) {
        return new HandleForm(value0);
    };
    return HandleForm;
})();
var LogUserOut = (function () {
    function LogUserOut() {

    };
    LogUserOut.value = new LogUserOut();
    return LogUserOut;
})();
var newtypeSettingsForm = new Data_Newtype.Newtype(function (n) {
    return n;
}, SettingsForm);
var component = function (dictMonadAff) {
    return function (dictNavigate) {
        return function (dictManageUser) {
            var render = function (v) {
                var formComponent = (function () {
                    var renderForm = function (v1) {
                        var proxies = Formless_Transform_Row.mkSProxies()(newtypeSettingsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "bio";
                        }))()(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "email";
                        }))()(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "image";
                        }))()(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "password";
                        }))()(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "username";
                        }))()(Formless_Transform_Row.makeSProxiesNil))))))(Formless_Types_Form.FormProxy.value);
                        var username = Conduit_Form_Field.input(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "username";
                        }))(newtypeSettingsForm)(newtypeSettingsForm)()()(proxies.username)(v1.form)([ Halogen_HTML_Properties.placeholder("Your name"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputText.value) ]);
                        var password = Conduit_Form_Field.input(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "password";
                        }))(newtypeSettingsForm)(newtypeSettingsForm)()()(proxies.password)(v1.form)([ Halogen_HTML_Properties.placeholder("Password"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputPassword.value) ]);
                        var image = Conduit_Form_Field.input(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "image";
                        }))(newtypeSettingsForm)(newtypeSettingsForm)()()(proxies.image)(v1.form)([ Halogen_HTML_Properties.placeholder("URL of profile picture"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputText.value) ]);
                        var email = Conduit_Form_Field.input(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "email";
                        }))(newtypeSettingsForm)(newtypeSettingsForm)()()(proxies.email)(v1.form)([ Halogen_HTML_Properties.placeholder("Email"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputEmail.value) ]);
                        var bio = Halogen_HTML_Elements.fieldset([ Conduit_Component_HTML_Utils.css("form-group") ])([ Halogen_HTML_Elements.textarea([ Conduit_Component_HTML_Utils.css("form-control form-control-lg"), Halogen_HTML_Properties.placeholder("Short bio about you"), Halogen_HTML_Properties.rows(8), Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "bio";
                        }))(newtypeSettingsForm)()(proxies.bio)(v1.form)), Halogen_HTML_Events.onValueInput((function () {
                            var $719 = Formless_Action.setValidate(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                return "bio";
                            }))(newtypeSettingsForm)()(proxies.bio);
                            return function ($720) {
                                return Data_Maybe.Just.create($719($720));
                            };
                        })()) ]) ]);
                        return Halogen_HTML_Elements.form_([ Halogen_HTML_Elements.fieldset_([ image, username, bio, email, password, Conduit_Form_Field.submit("Update settings") ]) ]);
                    };
                    var formInput = function (v1) {
                        return {
                            validators: {
                                image: Conduit_Form_Validation.toOptional(Data_Monoid.monoidString)(Data_Eq.eqString)(dictManageUser.Monad0())(Conduit_Form_Validation.avatarFormat(dictManageUser.Monad0())),
                                username: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(dictManageUser.Monad0()))(Conduit_Form_Validation.required(Data_Eq.eqString)(Data_Monoid.monoidString)(dictManageUser.Monad0()))(Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(dictManageUser.Monad0()))(Conduit_Form_Validation.minLength(dictManageUser.Monad0())(3))(Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(dictManageUser.Monad0()))(Conduit_Form_Validation.maxLength(dictManageUser.Monad0())(20))(Conduit_Form_Validation.usernameFormat(dictManageUser.Monad0())))),
                                bio: Formless_Validation.hoistFn_(dictManageUser.Monad0())(Control_Applicative.pure(Data_Maybe.applicativeMaybe)),
                                email: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(dictManageUser.Monad0()))(Conduit_Form_Validation.required(Data_Eq.eqString)(Data_Monoid.monoidString)(dictManageUser.Monad0()))(Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(dictManageUser.Monad0()))(Conduit_Form_Validation.minLength(dictManageUser.Monad0())(3))(Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(dictManageUser.Monad0()))(Conduit_Form_Validation.maxLength(dictManageUser.Monad0())(50))(Conduit_Form_Validation.emailFormat(dictManageUser.Monad0())))),
                                password: Conduit_Form_Validation.toOptional(Data_Monoid.monoidString)(Data_Eq.eqString)(dictManageUser.Monad0())(Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(dictManageUser.Monad0()))(Conduit_Form_Validation.minLength(dictManageUser.Monad0())(3))(Conduit_Form_Validation.maxLength(dictManageUser.Monad0())(20)))
                            },
                            initialInputs: Data_Maybe.Nothing.value
                        };
                    };
                    return Formless_Component.component(dictMonadAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)())())())())())(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))()(Formless_Internal_Transform.inputFieldsToInputNil)())())())())())(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))()(Formless_Internal_Transform.nilCountErrors))))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))()(Formless_Internal_Transform.nilAllTouched))))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)())())())())())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()()(Formless_Internal_Transform.modifyAllNil))))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))(dictManageUser.Monad0())()(newtypeSettingsForm)()()(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))(dictManageUser.Monad0())()(newtypeSettingsForm)()()(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))(dictManageUser.Monad0())()(newtypeSettingsForm)()()(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))(dictManageUser.Monad0())()(newtypeSettingsForm)()()(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))(dictManageUser.Monad0())()(newtypeSettingsForm)()()(Formless_Internal_Transform.applyToValidationNil(dictManageUser.Monad0())))))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)())())())())())(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "bio";
                    }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "email";
                    }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "image";
                    }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "password";
                    }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                        return "username";
                    }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)())())())())())(newtypeSettingsForm)(newtypeSettingsForm)(newtypeSettingsForm)(newtypeSettingsForm)(newtypeSettingsForm)(newtypeSettingsForm)(newtypeSettingsForm)(newtypeSettingsForm)()()()()()()()()()(formInput)({
                        render: renderForm,
                        handleAction: Formless_Component.defaultSpec.handleAction,
                        handleQuery: Formless_Component.defaultSpec.handleQuery,
                        handleEvent: Formless_Component.raiseResult(newtypeSettingsForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "bio";
                        }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "email";
                        }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "image";
                        }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "password";
                        }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                            return "username";
                        }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())()())()())),
                        receive: Formless_Component.defaultSpec.receive,
                        initialize: Formless_Component.defaultSpec.initialize,
                        finalize: Formless_Component.defaultSpec.finalize
                    });
                })();
                var container = function (html) {
                    return Halogen_HTML_Elements.div_([ Conduit_Component_HTML_Header.header(Data_Lens_Fold.preview(Network_RemoteData["_Success"](Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)))(v.profile))(Conduit_Data_Route.Settings.value), Halogen_HTML_Elements.div([ Conduit_Component_HTML_Utils.css("settings-page") ])([ Halogen_HTML_Elements.div([ Conduit_Component_HTML_Utils.css("container page") ])([ Halogen_HTML_Elements.div([ Conduit_Component_HTML_Utils.css("row") ])([ Halogen_HTML_Elements.div([ Conduit_Component_HTML_Utils.css("col-md-6 offset-md-3 col-xs12") ])(html) ]) ]) ]) ]);
                };
                return container([ Halogen_HTML_Elements.h1([ Conduit_Component_HTML_Utils.css("text-xs-center") ])([ Halogen_HTML_Core.text("Your Settings") ]), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                    return "formless";
                }))(Data_Ord.ordUnit)(Formless_Types_Component["_formless"])(Data_Unit.unit)(formComponent)(Data_Unit.unit)(function ($721) {
                    return Data_Maybe.Just.create(HandleForm.create($721));
                }), Halogen_HTML_Elements.hr_, Halogen_HTML_Elements.button([ Conduit_Component_HTML_Utils.css("btn btn-outline-danger"), Halogen_HTML_Events.onClick(function (v1) {
                    return new Data_Maybe.Just(LogUserOut.value);
                }) ])([ Halogen_HTML_Core.text("Log out") ]) ]);
            };
            var handleAction = function (v) {
                if (v instanceof Initialize) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                        var $707 = {};
                        for (var $708 in v1) {
                            if ({}.hasOwnProperty.call(v1, $708)) {
                                $707[$708] = v1[$708];
                            };
                        };
                        $707.profile = Network_RemoteData.Loading.value;
                        return $707;
                    }))(function ($dollar__unused) {
                        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Conduit_Capability_Resource_User.getCurrentUser(Conduit_Capability_Resource_User.manageUserHalogenM(dictManageUser)))(function (mbProfileWithEmail) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                var $710 = {};
                                for (var $711 in v1) {
                                    if ({}.hasOwnProperty.call(v1, $711)) {
                                        $710[$711] = v1[$711];
                                    };
                                };
                                $710.profile = Network_RemoteData.fromMaybe(mbProfileWithEmail);
                                return $710;
                            }))(function ($dollar__unused) {
                                if (mbProfileWithEmail instanceof Data_Maybe.Nothing) {
                                    return Conduit_Capability_Navigate.logout(Conduit_Capability_Navigate.navigateHalogenM(dictNavigate));
                                };
                                if (mbProfileWithEmail instanceof Data_Maybe.Just) {
                                    var newInputs = Formless_Transform_Record.wrapInputFields(newtypeSettingsForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                        return "bio";
                                    }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                        return "email";
                                    }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                        return "image";
                                    }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                        return "password";
                                    }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                        return "username";
                                    }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())()())()()))({
                                        image: Data_Maybe.fromMaybe("")(Data_Functor.map(Data_Maybe.functorMaybe)(Conduit_Data_Avatar.toString)(mbProfileWithEmail.value0.image)),
                                        username: Conduit_Data_Username.toString(mbProfileWithEmail.value0.username),
                                        bio: Data_Maybe.fromMaybe("")(mbProfileWithEmail.value0.bio),
                                        email: Data_Newtype.unwrap(Conduit_Data_Email.newtypeEmail)(mbProfileWithEmail.value0.email),
                                        password: ""
                                    });
                                    return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                                        return "formless";
                                    }))(Data_Ord.ordUnit)(Formless_Types_Component["_formless"])(Data_Unit.unit)(Formless_Query.asQuery(Formless_Action.loadForm(newInputs))));
                                };
                                throw new Error("Failed pattern match at Conduit.Page.Settings (line 76, column 7 - line 87, column 77): " + [ mbProfileWithEmail.constructor.name ]);
                            });
                        });
                    });
                };
                if (v instanceof HandleForm) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Conduit_Capability_Resource_User.updateUser(Conduit_Capability_Resource_User.manageUserHalogenM(dictManageUser))(v.value0))(function ($dollar__unused) {
                        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Conduit_Capability_Resource_User.getCurrentUser(Conduit_Capability_Resource_User.manageUserHalogenM(dictManageUser)))(function (mbProfileWithEmail) {
                            return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                var $715 = {};
                                for (var $716 in v1) {
                                    if ({}.hasOwnProperty.call(v1, $716)) {
                                        $715[$716] = v1[$716];
                                    };
                                };
                                $715.profile = Network_RemoteData.fromMaybe(mbProfileWithEmail);
                                return $715;
                            });
                        });
                    });
                };
                if (v instanceof LogUserOut) {
                    return Conduit_Capability_Navigate.logout(Conduit_Capability_Navigate.navigateHalogenM(dictNavigate));
                };
                throw new Error("Failed pattern match at Conduit.Page.Settings (line 68, column 18 - line 94, column 25): " + [ v.constructor.name ]);
            };
            return Halogen_Component.mkComponent({
                initialState: function (v) {
                    return {
                        profile: Network_RemoteData.NotAsked.value
                    };
                },
                render: render,
                "eval": Halogen_Component.mkEval({
                    handleAction: handleAction,
                    handleQuery: Halogen_Component.defaultEval.handleQuery,
                    receive: Halogen_Component.defaultEval.receive,
                    initialize: new Data_Maybe.Just(Initialize.value),
                    finalize: Halogen_Component.defaultEval.finalize
                })
            });
        };
    };
};
export {
    SettingsForm,
    Initialize,
    HandleForm,
    LogUserOut,
    component,
    newtypeSettingsForm
};
