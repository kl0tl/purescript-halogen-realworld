// Generated by purs version 0.13.8
"use strict";
var Conduit_Component_HTML_Utils = require("../Conduit.Component.HTML.Utils/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");
var DOM_HTML_Indexed_InputType = require("../DOM.HTML.Indexed.InputType/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Unfoldable = require("../Data.Unfoldable/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Halogen_Component = require("../Halogen.Component/index.js");
var Halogen_HTML_Core = require("../Halogen.HTML.Core/index.js");
var Halogen_HTML_Elements = require("../Halogen.HTML.Elements/index.js");
var Halogen_HTML_Events = require("../Halogen.HTML.Events/index.js");
var Halogen_HTML_Properties = require("../Halogen.HTML.Properties/index.js");
var Halogen_Query_HalogenM = require("../Halogen.Query.HalogenM/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_UIEvent_KeyboardEvent = require("../Web.UIEvent.KeyboardEvent/index.js");
var Tag = function (x) {
    return x;
};
var TagAdded = (function () {
    function TagAdded(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TagAdded.create = function (value0) {
        return function (value1) {
            return new TagAdded(value0, value1);
        };
    };
    return TagAdded;
})();
var TagRemoved = (function () {
    function TagRemoved(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TagRemoved.create = function (value0) {
        return function (value1) {
            return new TagRemoved(value0, value1);
        };
    };
    return TagRemoved;
})();
var HandleInput = (function () {
    function HandleInput(value0) {
        this.value0 = value0;
    };
    HandleInput.create = function (value0) {
        return new HandleInput(value0);
    };
    return HandleInput;
})();
var HandleKey = (function () {
    function HandleKey(value0) {
        this.value0 = value0;
    };
    HandleKey.create = function (value0) {
        return new HandleKey(value0);
    };
    return HandleKey;
})();
var RemoveTag = (function () {
    function RemoveTag(value0) {
        this.value0 = value0;
    };
    RemoveTag.create = function (value0) {
        return new RemoveTag(value0);
    };
    return RemoveTag;
})();
var Receive = (function () {
    function Receive(value0) {
        this.value0 = value0;
    };
    Receive.create = function (value0) {
        return new Receive(value0);
    };
    return Receive;
})();
var newtypeTag = new Data_Newtype.Newtype(function (n) {
    return n;
}, Tag);
var eqTag = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var ordTag = new Data_Ord.Ord(function ($dollar__unused) {
    return eqTag;
}, function (x) {
    return function (y) {
        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
    };
});
var component = function (dictMonadEffect) {
    var render = function (v) {
        var renderTag = function (tag) {
            return Halogen_HTML_Elements.span([ Conduit_Component_HTML_Utils.css("tag-default tag-pill") ])([ Halogen_HTML_Elements.i([ Conduit_Component_HTML_Utils.css("ion-close-round"), Halogen_HTML_Events.onClick(function (v1) {
                return Data_Maybe.Just.create(new RemoveTag(tag));
            }) ])([  ]), Halogen_HTML_Core.text(Data_Newtype.unwrap(newtypeTag)(tag)) ]);
        };
        return Halogen_HTML_Elements.fieldset([ Conduit_Component_HTML_Utils.css("form-group") ])([ Halogen_HTML_Elements.input([ Conduit_Component_HTML_Utils.css("form-control"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputText.value), Halogen_HTML_Properties.placeholder("Enter tags"), Halogen_HTML_Properties.value(v.text), Halogen_HTML_Events.onValueInput(function ($386) {
            return Data_Maybe.Just.create(HandleInput.create($386));
        }), Halogen_HTML_Events.onKeyDown(function ($387) {
            return Data_Maybe.Just.create(HandleKey.create($387));
        }) ]), Halogen_HTML_Elements.div([ Conduit_Component_HTML_Utils.css("tag-list") ])(Data_Functor.map(Data_Functor.functorArray)(renderTag)(Data_Set.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.tags))) ]);
    };
    var handleAction = function (v) {
        if (v instanceof HandleInput) {
            return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                var $366 = {};
                for (var $367 in v1) {
                    if ({}.hasOwnProperty.call(v1, $367)) {
                        $366[$367] = v1[$367];
                    };
                };
                $366.text = v.value0;
                return $366;
            });
        };
        if (v instanceof HandleKey) {
            var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
            if (v1 === "Enter") {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0))))(function ($dollar__unused) {
                    return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                        return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(st.text !== "")(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                            var $371 = {};
                            for (var $372 in v2) {
                                if ({}.hasOwnProperty.call(v2, $372)) {
                                    $371[$372] = v2[$372];
                                };
                            };
                            $371.tags = Data_Set.insert(ordTag)(st.text)(st.tags);
                            $371.text = "";
                            return $371;
                        }))(function (newState) {
                            return Halogen_Query_HalogenM.raise(new TagAdded(st.text, newState.tags));
                        }));
                    });
                });
            };
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
        };
        if (v instanceof RemoveTag) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
                var $375 = {};
                for (var $376 in s) {
                    if ({}.hasOwnProperty.call(s, $376)) {
                        $375[$376] = s[$376];
                    };
                };
                $375.tags = Data_Set["delete"](ordTag)(v.value0)(s.tags);
                return $375;
            }))(function (st) {
                return Halogen_Query_HalogenM.raise(new TagRemoved(v.value0, st.tags));
            });
        };
        if (v instanceof Receive) {
            return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (st) {
                return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(Data_Set.eqSet(eqTag))(v.value0.tags)(st.tags))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                    var $379 = {};
                    for (var $380 in v1) {
                        if ({}.hasOwnProperty.call(v1, $380)) {
                            $379[$380] = v1[$380];
                        };
                    };
                    $379.tags = v.value0.tags;
                    return $379;
                }));
            });
        };
        throw new Error("Failed pattern match at Conduit.Component.TagInput (line 57, column 18 - line 77, column 36): " + [ v.constructor.name ]);
    };
    return Halogen_Component.mkComponent({
        initialState: function (v) {
            return {
                tags: v.tags,
                text: ""
            };
        },
        render: render,
        "eval": Halogen_Component.mkEval({
            handleAction: handleAction,
            handleQuery: Halogen_Component.defaultEval.handleQuery,
            receive: function ($388) {
                return Data_Maybe.Just.create(Receive.create($388));
            },
            initialize: Halogen_Component.defaultEval.initialize,
            finalize: Halogen_Component.defaultEval.finalize
        })
    });
};
module.exports = {
    HandleInput: HandleInput,
    HandleKey: HandleKey,
    RemoveTag: RemoveTag,
    Receive: Receive,
    Tag: Tag,
    TagAdded: TagAdded,
    TagRemoved: TagRemoved,
    component: component,
    newtypeTag: newtypeTag,
    eqTag: eqTag,
    ordTag: ordTag
};
