// Generated by purs version 0.13.8
"use strict";
var Conduit_Data_Avatar = require("../Conduit.Data.Avatar/index.js");
var Conduit_Data_Username = require("../Conduit.Data.Username/index.js");
var Conduit_Data_Utils = require("../Conduit.Data.Utils/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Decode_Struct_Cross_DecodeJsonWith = require("../Data.Argonaut.Decode.Struct.Cross.DecodeJsonWith/index.js");
var Data_Argonaut_Decode_Struct_Override_DecodeJsonPer = require("../Data.Argonaut.Decode.Struct.Override.DecodeJsonPer/index.js");
var Data_Argonaut_Decode_Struct_Tolerant_Cross_Utils = require("../Data.Argonaut.Decode.Struct.Tolerant.Cross.Utils/index.js");
var Data_Argonaut_Decode_Struct_Tolerant_DecodeJson = require("../Data.Argonaut.Decode.Struct.Tolerant.DecodeJson/index.js");
var Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson = require("../Data.Argonaut.Decode.Struct.Tolerant.GDecodeJson/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Operator_Bottom = require("../Data.Operator.Bottom/index.js");
var Data_Operator_Top = require("../Data.Operator.Top/index.js");
var Data_Struct_Get_RGet = require("../Data.Struct.Get.RGet/index.js");
var Data_Struct_Insert_RInsert = require("../Data.Struct.Insert.RInsert/index.js");
var Data_Struct_RenameMany_RRenameMany = require("../Data.Struct.RenameMany.RRenameMany/index.js");
var Data_Struct_Utils_ReifyKeyAndValueSymbols = require("../Data.Struct.Utils.ReifyKeyAndValueSymbols/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Record_Builder = require("../Record.Builder/index.js");
var Type_Equality = require("../Type.Equality/index.js");
var Type_Proxying_Symbol = require("../Type.Proxying.Symbol/index.js");
var Following = (function () {
    function Following() {

    };
    Following.value = new Following();
    return Following;
})();
var NotFollowing = (function () {
    function NotFollowing() {

    };
    NotFollowing.value = new NotFollowing();
    return NotFollowing;
})();
var You = (function () {
    function You() {

    };
    You.value = new You();
    return You;
})();
var eqRelation = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Following && y instanceof Following) {
            return true;
        };
        if (x instanceof NotFollowing && y instanceof NotFollowing) {
            return true;
        };
        if (x instanceof You && y instanceof You) {
            return true;
        };
        return false;
    };
});
var decodeJsonFollowStatus = new Data_Argonaut_Decode_Class.DecodeJson(Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonBoolean))(function (v) {
    if (v) {
        return Control_Applicative.pure(Data_Either.applicativeEither)(Following.value);
    };
    return Control_Applicative.pure(Data_Either.applicativeEither)(NotFollowing.value);
}));
var getRelation = function (mbUsername) {
    return function (json) {
        return function (record) {
            if (mbUsername instanceof Data_Maybe.Just && Data_Eq.eq(Conduit_Data_Username.eqUsername)(mbUsername.value0)(record.username)) {
                return Control_Applicative.pure(Data_Either.applicativeEither)(You.value);
            };
            return Data_Argonaut_Decode_Class.decodeJson(decodeJsonFollowStatus)(json);
        };
    };
};
var decodeAuthor = function (mbUsername) {
    var $418 = Data_Functor.map(Data_Either.functorEither)(Data_Struct_RenameMany_RRenameMany.rrenameMany(Data_Struct_RenameMany_RRenameMany.rrenameManyFunction()(Data_Struct_Utils_ReifyKeyAndValueSymbols.reifyKeyAndValueSymbolsCons(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "following";
    }))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "relation";
    }))(Data_Struct_Utils_ReifyKeyAndValueSymbols.reifyKeyAndValueSymbolsNil))()())()({
        following: Data_Symbol.SProxy.value
    }));
    var $419 = Data_Argonaut_Decode_Struct_Tolerant_Cross_Utils.decodeJsonWith(Data_Either.bindEither)(Data_Operator_Bottom.bottom2Either)(Data_Argonaut_Decode_Struct_Cross_DecodeJsonWith.decodeJsonWithCons(Data_Either.bindEither)(Data_Operator_Bottom.bottom2Either)()()(Data_Argonaut_Decode_Struct_Cross_DecodeJsonWith.decodeJsonWithNil(Record_Builder.categoryBuilder)(Data_Operator_Top.top1_Either))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "following";
    }))()(Data_Struct_Get_RGet.rgetRecord(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "following";
    }))(Type_Proxying_Symbol.sProxyingSProxy))(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "following";
    }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder)(Data_Operator_Top.top1_Either)(Type_Equality.refl))(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_Plus()(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_Plus()(Data_Argonaut_Decode_Class.decodeJsonMaybe(Conduit_Data_Avatar.decodeJsonAvatar))(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_ConsNilCons_nonPlus()(Conduit_Data_Username.decodeJsonUsername)(Data_Argonaut_Decode_Struct_Tolerant_GDecodeJson.gDecodeJson_NilNilNil(Record_Builder.categoryBuilder)(Data_Operator_Top.top1_Either))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "username";
    }))()(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "username";
    }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "image";
    }))()(Data_Maybe.plusMaybe)(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "image";
    }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "bio";
    }))()(Data_Maybe.plusMaybe)(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
        return "bio";
    }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder))()()(Data_Operator_Top.top1_Either)({
        following: getRelation(mbUsername)
    });
    return function ($420) {
        return $418($419($420));
    };
};
var decodeJsonWithAuthor = function (dictGDecodeJson) {
    return function (dictLacks) {
        return function (dictRowToList) {
            return function (u) {
                return Data_Argonaut_Decode_Struct_Tolerant_Cross_Utils.decodeJsonPer(Data_Either.bindEither)(Data_Operator_Bottom.bottom2Either)(Data_Argonaut_Decode_Struct_Override_DecodeJsonPer.decodeJsonPerCons(Data_Either.bindEither)(Data_Operator_Bottom.bottom2Either)()()(Data_Argonaut_Decode_Struct_Override_DecodeJsonPer.decodeJsonPerNil(Record_Builder.categoryBuilder)(Data_Operator_Top.top1_Either))(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                    return "author";
                }))()(Data_Struct_Get_RGet.rgetRecord(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                    return "author";
                }))(Type_Proxying_Symbol.sProxyingSProxy))(Data_Struct_Insert_RInsert.rinsertBuilder(new Data_Symbol.IsSymbol(function ($dollar__unused) {
                    return "author";
                }))(Type_Proxying_Symbol.sProxyingSProxy))(Record_Builder.semigroupoidBuilder)(Data_Operator_Top.top1_Either)(Type_Equality.refl))(dictGDecodeJson)()()(Data_Operator_Top.top1_Either)({
                    author: decodeAuthor(u)
                });
            };
        };
    };
};
var decodeProfileAuthor = function (u) {
    return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(decodeAuthor(u))(Conduit_Data_Utils.decodeAt(Data_Argonaut_Decode_Struct_Tolerant_DecodeJson.decodeDecodeJson(Data_Argonaut_Decode_Class.decodeJsonJson))("profile"));
};
module.exports = {
    Following: Following,
    NotFollowing: NotFollowing,
    You: You,
    decodeAuthor: decodeAuthor,
    getRelation: getRelation,
    decodeJsonWithAuthor: decodeJsonWithAuthor,
    decodeProfileAuthor: decodeProfileAuthor,
    eqRelation: eqRelation,
    decodeJsonFollowStatus: decodeJsonFollowStatus
};
