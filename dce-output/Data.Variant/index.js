// Generated by purs version 0.13.8
"use strict";
var Data_Symbol = require("../Data.Symbol/index.js");
var Partial_Unsafe = require("../Partial.Unsafe/index.js");
var Record_Unsafe = require("../Record.Unsafe/index.js");
var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");
var onMatch = function (dictRowToList) {
    return function (dictVariantMatchCases) {
        return function (dictUnion) {
            return function (r) {
                return function (k) {
                    return function (v) {
                        if (Record_Unsafe.unsafeHas(v.type)(r)) {
                            return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                        };
                        return k(v);
                    };
                };
            };
        };
    };
};
var inj = function (dictCons) {
    return function (dictIsSymbol) {
        return function (p) {
            return function (value) {
                return {
                    type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                    value: value
                };
            };
        };
    };
};
var expand = function (dictUnion) {
    return Unsafe_Coerce.unsafeCoerce;
};
var case_ = function (r) {
    return Partial_Unsafe.unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
};
var match = function (dictRowToList) {
    return function (dictVariantMatchCases) {
        return function (dictUnion) {
            return function (r) {
                return onMatch()()()(r)(case_);
            };
        };
    };
};
module.exports = {
    inj: inj,
    onMatch: onMatch,
    case_: case_,
    match: match,
    expand: expand
};
