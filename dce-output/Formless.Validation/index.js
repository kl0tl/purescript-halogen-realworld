// Generated by purs version 0.13.6
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
var Validation = function (x) {
    return x;
};
var newtypeValidation = new Data_Newtype.Newtype(function (n) {
    return n;
}, Validation);
var runValidation = function (dictMonad) {
    return Data_Newtype.unwrap(newtypeValidation);
};
var semigroupoidValidation = function (dictMonad) {
    return new Control_Semigroupoid.Semigroupoid(function (v1) {
        return function (v0) {
            return function (form) {
                return function (i) {
                    return Control_Bind.bind(dictMonad.Bind1())(Data_Newtype.unwrap(newtypeValidation)(v0)(form)(i))(function (eo) {
                        return Data_Either.either((function () {
                            var $2185 = Control_Applicative.pure(dictMonad.Applicative0());
                            return function ($2186) {
                                return $2185(Data_Either.Left.create($2186));
                            };
                        })())(Data_Newtype.unwrap(newtypeValidation)(v1)(form))(eo);
                    });
                };
            };
        };
    });
};
var hoistFn_ = function (dictMonad) {
    return function (f) {
        return Validation(Data_Function["const"]((function () {
            var $2187 = Control_Applicative.pure(dictMonad.Applicative0());
            var $2188 = Control_Applicative.pure(Data_Either.applicativeEither);
            return function ($2189) {
                return $2187($2188(f($2189)));
            };
        })()));
    };
};
var hoistFnE_ = function (dictMonad) {
    return function (f) {
        return Validation(Data_Function["const"]((function () {
            var $2190 = Control_Applicative.pure(dictMonad.Applicative0());
            return function ($2191) {
                return $2190(f($2191));
            };
        })()));
    };
};
export {
    Validation,
    runValidation,
    hoistFn_,
    hoistFnE_,
    newtypeValidation,
    semigroupoidValidation
};
