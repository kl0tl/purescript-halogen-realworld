{"efVersion":"0.13.6","efModuleName":["Text","Parsing","Parser","Token"],"efExports":[{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"token"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"when"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"match"}]},{"TypeRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},"LanguageDef",[]]},{"TypeRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},"GenLanguageDef",["LanguageDef"]]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"unGenLanguageDef"}]},{"TypeRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},"TokenParser",[]]},{"TypeRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},"GenTokenParser",[]]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"makeTokenParser"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"digit"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"hexDigit"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"octDigit"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"upper"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"space"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"letter"}]},{"ValueRef":[{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]},{"Ident":"alphaNum"}]}],"efImports":[{"eiModule":["Prim"],"eiImportType":{"Implicit":[]},"eiImportedAs":["Prim"]},{"eiModule":["Prim"],"eiImportType":{"Implicit":[]},"eiImportedAs":null},{"eiModule":["Prelude"],"eiImportType":{"Hiding":[{"ValueRef":[{"start":[24,24],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[24,28]},{"Ident":"when"}]},{"ValueRef":[{"start":[24,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[24,36]},{"Ident":"between"}]}]},"eiImportedAs":null},{"eiModule":["Control","Lazy"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[26,22],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[26,25]},{"Ident":"fix"}]}]},"eiImportedAs":null},{"eiModule":["Control","Monad","State"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[27,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[27,33]},{"Ident":"gets"}]},{"ValueRef":[{"start":[27,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[27,42]},{"Ident":"modify_"}]}]},"eiImportedAs":null},{"eiModule":["Control","MonadPlus"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[28,27],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[28,32]},{"Ident":"guard"}]},{"ValueOpRef":[{"start":[28,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[28,39]},"<|>"]}]},"eiImportedAs":null},{"eiModule":["Data","Array"],"eiImportType":{"Implicit":[]},"eiImportedAs":["Array"]},{"eiModule":["Data","Char"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[30,19],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[30,31]},{"Ident":"fromCharCode"}]},{"ValueRef":[{"start":[30,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[30,43]},{"Ident":"toCharCode"}]}]},"eiImportedAs":null},{"eiModule":["Data","Char","Unicode"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[31,27],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,37]},{"Ident":"digitToInt"}]},{"ValueRef":[{"start":[31,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,46]},{"Ident":"isAlpha"}]},{"ValueRef":[{"start":[31,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,58]},{"Ident":"isAlphaNum"}]},{"ValueRef":[{"start":[31,60],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,67]},{"Ident":"isDigit"}]},{"ValueRef":[{"start":[31,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,79]},{"Ident":"isHexDigit"}]},{"ValueRef":[{"start":[31,81],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,91]},{"Ident":"isOctDigit"}]},{"ValueRef":[{"start":[31,93],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,100]},{"Ident":"isSpace"}]},{"ValueRef":[{"start":[31,102],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[31,109]},{"Ident":"isUpper"}]}]},"eiImportedAs":null},{"eiModule":["Data","Char","Unicode"],"eiImportType":{"Implicit":[]},"eiImportedAs":["Unicode"]},{"eiModule":["Data","Either"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[33,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[33,31]},"Either",null]}]},"eiImportedAs":null},{"eiModule":["Data","Foldable"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[34,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[34,28]},{"Ident":"foldl"}]},{"ValueRef":[{"start":[34,30],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[34,35]},{"Ident":"foldr"}]}]},"eiImportedAs":null},{"eiModule":["Data","Identity"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[35,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[35,31]},"Identity",[]]}]},"eiImportedAs":null},{"eiModule":["Data","Int"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[36,18],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[36,26]},{"Ident":"toNumber"}]}]},"eiImportedAs":null},{"eiModule":["Data","List"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[37,19],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[37,27]},"List",null]}]},"eiImportedAs":null},{"eiModule":["Data","List"],"eiImportType":{"Implicit":[]},"eiImportedAs":["List"]},{"eiModule":["Data","Maybe"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[39,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[39,29]},"Maybe",null]},{"ValueRef":[{"start":[39,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[39,36]},{"Ident":"maybe"}]}]},"eiImportedAs":null},{"eiModule":["Data","String"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[40,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[40,25]},{"Ident":"null"}]},{"ValueRef":[{"start":[40,27],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[40,34]},{"Ident":"toLower"}]}]},"eiImportedAs":null},{"eiModule":["Data","String","CodeUnits"],"eiImportType":{"Implicit":[]},"eiImportedAs":["SCU"]},{"eiModule":["Data","Tuple"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[42,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[42,29]},"Tuple",null]}]},"eiImportedAs":null},{"eiModule":["Math"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[43,14],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[43,17]},{"Ident":"pow"}]}]},"eiImportedAs":null},{"eiModule":["Text","Parsing","Parser"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[44,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[44,43]},"ParseState",null]},{"TypeRef":[{"start":[44,45],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[44,52]},"ParserT",[]]},{"ValueRef":[{"start":[44,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[44,58]},{"Ident":"fail"}]}]},"eiImportedAs":null},{"eiModule":["Text","Parsing","Parser","Combinators"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[45,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,50]},{"Ident":"skipMany1"}]},{"ValueRef":[{"start":[45,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,55]},{"Ident":"try"}]},{"ValueRef":[{"start":[45,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,67]},{"Ident":"tryRethrow"}]},{"ValueRef":[{"start":[45,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,77]},{"Ident":"skipMany"}]},{"ValueRef":[{"start":[45,79],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,92]},{"Ident":"notFollowedBy"}]},{"ValueRef":[{"start":[45,94],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,100]},{"Ident":"option"}]},{"ValueRef":[{"start":[45,102],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,108]},{"Ident":"choice"}]},{"ValueRef":[{"start":[45,110],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,117]},{"Ident":"between"}]},{"ValueRef":[{"start":[45,119],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,125]},{"Ident":"sepBy1"}]},{"ValueRef":[{"start":[45,127],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,132]},{"Ident":"sepBy"}]},{"ValueOpRef":[{"start":[45,134],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,139]},"<?>"]},{"ValueOpRef":[{"start":[45,141],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[45,147]},"<??>"]}]},"eiImportedAs":null},{"eiModule":["Text","Parsing","Parser","Pos"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[46,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[46,41]},"Position",[]]}]},"eiImportedAs":null},{"eiModule":["Text","Parsing","Parser","String"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[47,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[47,43]},{"Ident":"satisfy"}]},{"ValueRef":[{"start":[47,45],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[47,50]},{"Ident":"oneOf"}]},{"ValueRef":[{"start":[47,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[47,58]},{"Ident":"noneOf"}]},{"ValueRef":[{"start":[47,60],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[47,66]},{"Ident":"string"}]},{"ValueRef":[{"start":[47,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[47,72]},{"Ident":"char"}]}]},"eiImportedAs":null}],"efFixities":[],"efTypeFixities":[],"efDeclarations":[{"EDValue":{"edValueName":{"Ident":"token"},"edValueType":{"annotation":[{"start":[50,10],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,72]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[50,17],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,72]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[50,22],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,72]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[50,22],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,29]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[50,28],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,29]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[50,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,72]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,72]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,51]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[50,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[50,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,35]},[]],"tag":"TypeVar","contents":"a"}]},{"annotation":[{"start":[50,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}]},{"annotation":[{"start":[50,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,72]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,70]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,59]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[50,61],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[50,61],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,65]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[50,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,67]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[50,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,70]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[50,71],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[50,72]},[]],"tag":"TypeVar","contents":"a"}]}]}]},6]},7]}}},{"EDValue":{"edValueName":{"Ident":"when"},"edValueType":{"annotation":[{"start":[61,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[61,16],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[61,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[61,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,28]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[61,27],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,28]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[61,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,50]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[61,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,46]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,46]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,37]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[61,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,34]},[]],"tag":"TypeVar","contents":"a"}]},{"annotation":[{"start":[61,38],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}]},{"annotation":[{"start":[61,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,68]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[61,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,64]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,64]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[61,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,53]},[]],"tag":"TypeVar","contents":"a"}]},{"annotation":[{"start":[61,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,64]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},{"annotation":[{"start":[61,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,87]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,85]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,76]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[61,78],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,84]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[61,78],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,82]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[61,83],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,84]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[61,86],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,87]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[61,88],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[61,89]},[]],"tag":"TypeVar","contents":"a"}]}]}]}]},10]},11]}}},{"EDValue":{"edValueName":{"Ident":"match"},"edValueType":{"annotation":[{"start":[68,10],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[68,17],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[68,22],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[68,22],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,29]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[68,28],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,29]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[68,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[68,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,37]},[]],"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"annotation":[{"start":[68,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,37]},[]],"tag":"TypeVar","contents":"a"}],"constraintData":null},{"annotation":[{"start":[68,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,59]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[68,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,44],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,46]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[68,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,43]},[]],"tag":"TypeVar","contents":"a"}]},{"annotation":[{"start":[68,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,55]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Pos"],"Position"]}]}]},{"annotation":[{"start":[68,60],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,60],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,62],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,64]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[68,60],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,61]},[]],"tag":"TypeVar","contents":"a"}]},{"annotation":[{"start":[68,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,83]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,81]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,72]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[68,74],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,80]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[68,74],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,78]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[68,79],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,80]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[68,82],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,83]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[68,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[68,85]},[]],"tag":"TypeVar","contents":"a"}]}]}]}]}]},24]},25]}}},{"EDType":{"edTypeName":"LanguageDef","edTypeKind":{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,34]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},"edTypeDeclarationKind":"TypeSynonym"}},{"EDTypeSynonym":{"edTypeSynonymName":"LanguageDef","edTypeSynonymArguments":[],"edTypeSynonymType":{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,34]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[71,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[71,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}}},{"EDType":{"edTypeName":"GenLanguageDef","edTypeKind":{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]},"edTypeDeclarationKind":{"DataType":{"args":[["s",{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}],["m",{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]],"ctors":[["LanguageDef",[{"annotation":[{"start":[77,19],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[109,6]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[77,19],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[77,20]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[{"start":[80,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[80,29]},[{"LineComment":" | Describes the start of a block comment. Use the empty string if the"},{"LineComment":" | language doesn't support block comments. For example `/*`."}]],"tag":"RCons","contents":["commentStart",{"annotation":[{"start":[80,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[80,29]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[83,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[83,29]},[{"LineComment":" | Describes the end of a block comment. Use the empty string if the"},{"LineComment":" | language doesn't support block comments. For example `*/`."}]],"tag":"RCons","contents":["commentEnd",{"annotation":[{"start":[83,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[83,29]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[86,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[86,29]},[{"LineComment":" | Describes the start of a line comment. Use the empty string if the"},{"LineComment":" | language doesn't support line comments. For example `//`."}]],"tag":"RCons","contents":["commentLine",{"annotation":[{"start":[86,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[86,29]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[88,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[88,30]},[{"LineComment":" | Set to `true` if the language supports nested block comments."}]],"tag":"RCons","contents":["nestedComments",{"annotation":[{"start":[88,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[88,30]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[{"start":[91,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,39]},[{"LineComment":" | This parser should accept any start characters of identifiers. For"},{"LineComment":" | example `letter <|> char '_'`."}]],"tag":"RCons","contents":["identStart",{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[91,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[91,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[91,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[94,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,39]},[{"LineComment":" | This parser should accept any legal tail characters of identifiers."},{"LineComment":" | For example `alphaNum <|> char '_'`."}]],"tag":"RCons","contents":["identLetter",{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[94,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[94,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[94,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[97,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,39]},[{"LineComment":" | This parser should accept any start characters of operators. For"},{"LineComment":" | example `oneOf [':', '+', '=']`."}]],"tag":"RCons","contents":["opStart",{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[97,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[97,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[97,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[102,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,39]},[{"LineComment":" | This parser should accept any legal tail characters of operators."},{"LineComment":" | Note that this parser should even be defined if the language doesn't"},{"LineComment":" | support user-defined operators, or otherwise the `reservedOp`"},{"LineComment":" | parser won't work correctly."}]],"tag":"RCons","contents":["opLetter",{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[102,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[102,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[102,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[104,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,35]},[{"LineComment":" | The list of reserved identifiers."}]],"tag":"RCons","contents":["reservedNames",{"annotation":[{"start":[104,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,35]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[104,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,28]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[{"start":[104,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[106,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,35]},[{"LineComment":" | The list of reserved operators."}]],"tag":"RCons","contents":["reservedOpNames",{"annotation":[{"start":[106,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,35]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[106,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,28]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[{"start":[106,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[108,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[108,30]},[{"LineComment":" | Set to `true` if the language is case sensitive."}]],"tag":"RCons","contents":["caseSensitive",{"annotation":[{"start":[108,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[108,30]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[{"start":[109,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[109,6]},[]],"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]]]}}}},{"EDDataConstructor":{"edDataCtorName":"LanguageDef","edDataCtorOrigin":"newtype","edDataCtorTypeCtor":"GenLanguageDef","edDataCtorType":{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"ForAll","contents":["s",{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[77,19],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[109,6]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[77,19],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[77,20]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[{"start":[80,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[80,29]},[{"LineComment":" | Describes the start of a block comment. Use the empty string if the"},{"LineComment":" | language doesn't support block comments. For example `/*`."}]],"tag":"RCons","contents":["commentStart",{"annotation":[{"start":[80,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[80,29]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[83,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[83,29]},[{"LineComment":" | Describes the end of a block comment. Use the empty string if the"},{"LineComment":" | language doesn't support block comments. For example `*/`."}]],"tag":"RCons","contents":["commentEnd",{"annotation":[{"start":[83,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[83,29]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[86,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[86,29]},[{"LineComment":" | Describes the start of a line comment. Use the empty string if the"},{"LineComment":" | language doesn't support line comments. For example `//`."}]],"tag":"RCons","contents":["commentLine",{"annotation":[{"start":[86,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[86,29]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[88,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[88,30]},[{"LineComment":" | Set to `true` if the language supports nested block comments."}]],"tag":"RCons","contents":["nestedComments",{"annotation":[{"start":[88,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[88,30]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[{"start":[91,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,39]},[{"LineComment":" | This parser should accept any start characters of identifiers. For"},{"LineComment":" | example `letter <|> char '_'`."}]],"tag":"RCons","contents":["identStart",{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[91,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[91,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[91,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[91,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[91,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[94,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,39]},[{"LineComment":" | This parser should accept any legal tail characters of identifiers."},{"LineComment":" | For example `alphaNum <|> char '_'`."}]],"tag":"RCons","contents":["identLetter",{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[94,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[94,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[94,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[94,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[94,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[97,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,39]},[{"LineComment":" | This parser should accept any start characters of operators. For"},{"LineComment":" | example `oneOf [':', '+', '=']`."}]],"tag":"RCons","contents":["opStart",{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[97,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[97,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[97,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[97,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[97,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[102,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,39]},[{"LineComment":" | This parser should accept any legal tail characters of operators."},{"LineComment":" | Note that this parser should even be defined if the language doesn't"},{"LineComment":" | support user-defined operators, or otherwise the `reservedOp`"},{"LineComment":" | parser won't work correctly."}]],"tag":"RCons","contents":["opLetter",{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,39]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,34]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,32]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[102,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,30]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[102,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,32]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[102,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,34]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[102,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[102,39]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[104,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,35]},[{"LineComment":" | The list of reserved identifiers."}]],"tag":"RCons","contents":["reservedNames",{"annotation":[{"start":[104,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,35]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[104,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,28]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[{"start":[104,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[104,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[106,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,35]},[{"LineComment":" | The list of reserved operators."}]],"tag":"RCons","contents":["reservedOpNames",{"annotation":[{"start":[106,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,35]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[106,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,28]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[{"start":[106,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[106,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[108,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[108,30]},[{"LineComment":" | Set to `true` if the language is case sensitive."}]],"tag":"RCons","contents":["caseSensitive",{"annotation":[{"start":[108,23],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[108,30]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[{"start":[109,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[109,6]},[]],"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]},{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"TypeVar","contents":"m"}]}]},null]},null]},"edDataCtorFields":[{"Ident":"value0"}]}},{"EDValue":{"edValueName":{"Ident":"unGenLanguageDef"},"edValueType":{"annotation":[{"start":[111,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[122,57]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[111,28],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[122,57]},[]],"tag":"ForAll","contents":["s",{"annotation":[{"start":[111,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[122,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[111,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[122,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[111,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[111,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[111,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[111,34],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,48]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[111,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,50]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[111,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,52]},[]],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[{"start":[111,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[122,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[111,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,57]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[{"start":[111,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,82]},[]],"tag":"RCons","contents":["caseSensitive",{"annotation":[{"start":[111,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[111,82]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[{"start":[112,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[112,89]},[]],"tag":"RCons","contents":["reservedOpNames",{"annotation":[{"start":[112,77],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[112,89]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[112,77],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[112,82]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[{"start":[112,83],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[112,89]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[113,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[113,87]},[]],"tag":"RCons","contents":["reservedNames",{"annotation":[{"start":[113,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[113,87]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[113,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[113,80]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[{"start":[113,81],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[113,87]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[114,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,86]},[]],"tag":"RCons","contents":["opLetter",{"annotation":[{"start":[114,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,86]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[114,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,81]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[114,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,79]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[114,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,77]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[114,78],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,79]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[114,80],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,81]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[114,82],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[114,86]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[115,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,85]},[]],"tag":"RCons","contents":["opStart",{"annotation":[{"start":[115,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,85]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[115,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,80]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[115,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,78]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[115,69],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,76]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[115,77],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,78]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[115,79],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,80]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[115,81],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[115,85]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[116,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,89]},[]],"tag":"RCons","contents":["identLetter",{"annotation":[{"start":[116,73],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,89]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[116,73],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,84]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[116,73],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,82]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[116,73],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,80]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[116,81],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,82]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[116,83],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,84]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[116,85],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[116,89]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[117,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,88]},[]],"tag":"RCons","contents":["identStart",{"annotation":[{"start":[117,72],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,88]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[117,72],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,83]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[117,72],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,81]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[117,72],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,79]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[117,80],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,81]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[117,82],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,83]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[117,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[117,88]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[118,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[118,83]},[]],"tag":"RCons","contents":["nestedComments",{"annotation":[{"start":[118,76],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[118,83]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"annotation":[{"start":[119,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[119,79]},[]],"tag":"RCons","contents":["commentLine",{"annotation":[{"start":[119,73],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[119,79]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[120,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[120,78]},[]],"tag":"RCons","contents":["commentEnd",{"annotation":[{"start":[120,72],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[120,78]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[121,58],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[121,80]},[]],"tag":"RCons","contents":["commentStart",{"annotation":[{"start":[121,74],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[121,80]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[{"start":[122,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[122,57]},[]],"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]},2]},3]}}},{"EDType":{"edTypeName":"TokenParser","edTypeKind":{"annotation":[{"start":[129,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,34]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},"edTypeDeclarationKind":"TypeSynonym"}},{"EDTypeSynonym":{"edTypeSynonymName":"TokenParser","edTypeSynonymArguments":[],"edTypeSynonymType":{"annotation":[{"start":[129,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[129,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[129,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,34]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenTokenParser"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}}},{"EDType":{"edTypeName":"GenTokenParser","edTypeKind":{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[{"start":[0,0],"name":"","end":[0,0]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}]},{"annotation":[{"start":[134,7],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[134,8]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]},"edTypeDeclarationKind":"TypeSynonym"}},{"EDTypeSynonym":{"edTypeSynonymName":"GenTokenParser","edTypeSynonymArguments":[["s",{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}],["m",{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"FunKind","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]},{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"NamedKind","contents":[["Prim"],"Type"]}]}]],"edTypeSynonymType":{"annotation":[{"start":[134,7],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[270,6]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[134,7],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[134,8]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[{"start":[141,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[{"LineComment":" | This lexeme parser parses a legal identifier. Returns the identifier"},{"LineComment":" | string. This parser will fail on identifiers that are reserved"},{"LineComment":" | words. Legal identifier (start) characters and reserved words are"},{"LineComment":" | defined in the `LanguageDef` that is passed to"},{"LineComment":" | `makeTokenParser`. An `identifier` is treated as"},{"LineComment":" | a single token using `try`."}]],"tag":"RCons","contents":["identifier",{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[141,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[141,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[141,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[146,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[{"LineComment":" | The lexeme parser `reserved name` parses `symbol"},{"LineComment":" | name`, but it also checks that the `name` is not a prefix of a"},{"LineComment":" | valid identifier. A `reserved` word is treated as a single token"},{"LineComment":" | using `try`."}]],"tag":"RCons","contents":["reserved",{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[146,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[146,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[146,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[{"start":[153,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[{"LineComment":" | This lexeme parser parses a legal operator. Returns the name of the"},{"LineComment":" | operator. This parser will fail on any operators that are reserved"},{"LineComment":" | operators. Legal operator (start) characters and reserved operators"},{"LineComment":" | are defined in the `LanguageDef` that is passed to"},{"LineComment":" | `makeTokenParser`. An `operator` is treated as a"},{"LineComment":" | single token using `try`."}]],"tag":"RCons","contents":["operator",{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[153,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[153,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[153,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[158,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[{"LineComment":" |The lexeme parser `reservedOp name` parses `symbol"},{"LineComment":" | name`, but it also checks that the `name` is not a prefix of a"},{"LineComment":" | valid operator. A `reservedOp` is treated as a single token using"},{"LineComment":" | `try`."}]],"tag":"RCons","contents":["reservedOp",{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[158,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[158,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[158,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[{"start":[164,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[{"LineComment":" | This lexeme parser parses a single literal character. Returns the"},{"LineComment":" | literal character value. This parsers deals correctly with escape"},{"LineComment":" | sequences. The literal character is parsed according to the grammar"},{"LineComment":" | rules defined in the Haskell report (which matches most programming"},{"LineComment":" | languages quite closely)."}]],"tag":"RCons","contents":["charLiteral",{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[164,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[164,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[164,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[170,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[{"LineComment":" | This lexeme parser parses a literal string. Returns the literal"},{"LineComment":" | string value. This parsers deals correctly with escape sequences and"},{"LineComment":" | gaps. The literal string is parsed according to the grammar rules"},{"LineComment":" | defined in the Haskell report (which matches most programming"},{"LineComment":" | languages quite closely)."}]],"tag":"RCons","contents":["stringLiteral",{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[170,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[170,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[170,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[176,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[{"LineComment":" | This lexeme parser parses a natural number (a positive whole"},{"LineComment":" | number). Returns the value of the number. The number can be"},{"LineComment":" | specified in `decimal`, `hexadecimal` or"},{"LineComment":" | `octal`. The number is parsed according to the grammar"},{"LineComment":" | rules in the Haskell report."}]],"tag":"RCons","contents":["natural",{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[176,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[176,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[176,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[183,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[{"LineComment":" | This lexeme parser parses an integer (a whole number). This parser"},{"LineComment":" | is like `natural` except that it can be prefixed with"},{"LineComment":" | sign (i.e. `-` or `+`). Returns the value of the number. The"},{"LineComment":" | number can be specified in `decimal`, `hexadecimal`"},{"LineComment":" | or `octal`. The number is parsed according"},{"LineComment":" | to the grammar rules in the Haskell report."}]],"tag":"RCons","contents":["integer",{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[183,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[183,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[183,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[187,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[{"LineComment":" | This lexeme parser parses a floating point value. Returns the value"},{"LineComment":" | of the number. The number is parsed according to the grammar rules"},{"LineComment":" | defined in the Haskell report."}]],"tag":"RCons","contents":["float",{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[187,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[187,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[187,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[{"start":[192,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,60]},[{"LineComment":" | This lexeme parser parses either `natural` or a `float`."},{"LineComment":" | Returns the value of the number. This parsers deals with"},{"LineComment":" | any overlap in the grammar rules for naturals and floats. The number"},{"LineComment":" | is parsed according to the grammar rules defined in the Haskell report."}]],"tag":"RCons","contents":["naturalOrFloat",{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,60]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[192,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[192,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,59]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,48]},[]],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[{"start":[192,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,52]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[192,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,59]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"annotation":[{"start":[195,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[{"LineComment":" | Parses a positive whole number in the decimal system. Returns the"},{"LineComment":" | value of the number."}]],"tag":"RCons","contents":["decimal",{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[195,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[195,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[195,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[199,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[{"LineComment":" | Parses a positive whole number in the hexadecimal system. The number"},{"LineComment":" | should be prefixed with `0x` or `0X`. Returns the value of the"},{"LineComment":" | number."}]],"tag":"RCons","contents":["hexadecimal",{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[199,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[199,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[199,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[203,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[{"LineComment":" | Parses a positive whole number in the octal system. The number"},{"LineComment":" | should be prefixed with `0o` or `0O`. Returns the value of the"},{"LineComment":" | number."}]],"tag":"RCons","contents":["octal",{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[203,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[203,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[203,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[206,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[{"LineComment":" | Lexeme parser `symbol s` parses `string` `s` and skips"},{"LineComment":" | trailing white space."}]],"tag":"RCons","contents":["symbol",{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[206,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[206,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[206,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[{"start":[224,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[{"LineComment":" | `lexeme p` first applies parser `p` and than the `whiteSpace`"},{"LineComment":" | parser, returning the value of `p`. Every lexical"},{"LineComment":" | token (lexeme) is defined using `lexeme`, this way every parse"},{"LineComment":" | starts at a point without white space. Parsers that use `lexeme` are"},{"LineComment":" | called *lexeme* parsers in this document."},{"LineComment":" |"},{"LineComment":" | The only point where the `whiteSpace` parser should be"},{"LineComment":" | called explicitly is the start of the main parser in order to skip"},{"LineComment":" | any leading white space."},{"LineComment":" |"},{"LineComment":" | ```purescript"},{"LineComment":" | mainParser = do"},{"LineComment":" |   whiteSpace"},{"LineComment":" |   ds <- many (lexeme digit)"},{"LineComment":" |   eof"},{"LineComment":" |   pure (sum ds)"},{"LineComment":" | ```"}]],"tag":"RCons","contents":["lexeme",{"annotation":[{"start":[224,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[224,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[224,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[224,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[224,64],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,65]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[224,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,67]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[224,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeVar","contents":"a"}]}]},null]},{"annotation":[{"start":[230,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[{"LineComment":" | Parses any white space. White space consists of *zero* or more"},{"LineComment":" | occurrences of a `space`, a line comment or a block (multi"},{"LineComment":" | line) comment. Block comments may be nested. How comments are"},{"LineComment":" | started and ended is defined in the `LanguageDef`"},{"LineComment":" | that is passed to `makeTokenParser`."}]],"tag":"RCons","contents":["whiteSpace",{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[230,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[230,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[230,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[{"start":[233,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[{"LineComment":" | Lexeme parser `parens p` parses `p` enclosed in parenthesis,"},{"LineComment":" | returning the value of `p`."}]],"tag":"RCons","contents":["parens",{"annotation":[{"start":[233,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[233,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[233,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[233,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[233,64],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,65]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[233,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,67]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[233,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeVar","contents":"a"}]}]},null]},{"annotation":[{"start":[236,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[{"LineComment":" | Lexeme parser `braces p` parses `p` enclosed in braces (`{` and"},{"LineComment":" | `}`), returning the value of `p`."}]],"tag":"RCons","contents":["braces",{"annotation":[{"start":[236,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[236,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[236,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[236,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[236,64],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,65]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[236,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,67]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[236,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeVar","contents":"a"}]}]},null]},{"annotation":[{"start":[239,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[{"LineComment":" | Lexeme parser `angles p` parses `p` enclosed in angle brackets (`<`"},{"LineComment":" | and `>`), returning the value of `p`."}]],"tag":"RCons","contents":["angles",{"annotation":[{"start":[239,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[239,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[239,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[239,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[239,64],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,65]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[239,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,67]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[239,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeVar","contents":"a"}]}]},null]},{"annotation":[{"start":[242,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[{"LineComment":" | Lexeme parser `brackets p` parses `p` enclosed in brackets (`[`"},{"LineComment":" | and `]`), returning the value of `p`."}]],"tag":"RCons","contents":["brackets",{"annotation":[{"start":[242,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[242,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,48]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[242,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,50]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[242,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[242,64],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,65]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[242,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,67]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[242,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeVar","contents":"a"}]}]},null]},{"annotation":[{"start":[245,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[{"LineComment":" | Lexeme parser `semi` parses the character `;` and skips any"},{"LineComment":" | trailing white space. Returns the string `;`."}]],"tag":"RCons","contents":["semi",{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[245,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[245,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[245,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[248,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[{"LineComment":" | Lexeme parser `comma` parses the character `,` and skips any"},{"LineComment":" | trailing white space. Returns the string `,`."}]],"tag":"RCons","contents":["comma",{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[248,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[248,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[248,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[251,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[{"LineComment":" | Lexeme parser `colon` parses the character `:` and skips any"},{"LineComment":" | trailing white space. Returns the string `:`."}]],"tag":"RCons","contents":["colon",{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[251,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[251,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[251,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[254,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[{"LineComment":" | Lexeme parser `dot` parses the character `.` and skips any"},{"LineComment":" | trailing white space. Returns the string `.`."}]],"tag":"RCons","contents":["dot",{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[254,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,38]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[254,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,40]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[254,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[258,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[{"LineComment":" | Lexeme parser `semiSep p` parses *zero* or more occurrences of `p`"},{"LineComment":" | separated by `semi`. Returns a list of values pureed by"},{"LineComment":" | `p`."}]],"tag":"RCons","contents":["semiSep",{"annotation":[{"start":[258,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[258,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,49]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[258,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,51]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[258,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[258,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,66]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[258,67],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,68]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[258,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[258,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},null]},{"annotation":[{"start":[261,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[{"LineComment":" | Lexeme parser `semiSep1 p` parses *one* or more occurrences of `p`"},{"LineComment":" | separated by `semi`. Returns a list of values pureed by `p`."}]],"tag":"RCons","contents":["semiSep1",{"annotation":[{"start":[261,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[261,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,49]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[261,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,51]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[261,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[261,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,66]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[261,67],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,68]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[261,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[261,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},null]},{"annotation":[{"start":[265,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[{"LineComment":" | Lexeme parser `commaSep p` parses *zero* or more occurrences of"},{"LineComment":" | `p` separated by `comma`. Returns a list of values pureed"},{"LineComment":" | by `p`."}]],"tag":"RCons","contents":["commaSep",{"annotation":[{"start":[265,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[265,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,49]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[265,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,51]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[265,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[265,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,66]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[265,67],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,68]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[265,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[265,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},null]},{"annotation":[{"start":[269,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[{"LineComment":" | Lexeme parser `commaSep1 p` parses *one* or more occurrences of"},{"LineComment":" | `p` separated by `comma`. Returns a list of values pureed"},{"LineComment":" | by `p`."}]],"tag":"RCons","contents":["commaSep1",{"annotation":[{"start":[269,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[269,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,49]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[269,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,51]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[269,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[269,65],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,66]},[]],"tag":"TypeVar","contents":"s"}]},{"annotation":[{"start":[269,67],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,68]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[269,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[269,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},null]},{"annotation":[{"start":[270,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[270,6]},[]],"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}},{"EDValue":{"edValueName":{"Ident":"makeTokenParser"},"edValueType":{"annotation":[{"start":[304,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[304,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[304,31],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,38]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[304,37],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,38]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[304,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[304,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[304,66],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,68]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[304,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[304,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,63]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[304,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,56]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[304,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,63]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,64],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,65]},[]],"tag":"TypeVar","contents":"m"}]}]},{"annotation":[{"start":[134,7],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[270,6]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[134,7],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[134,8]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[{"start":[141,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[{"LineComment":" | This lexeme parser parses a legal identifier. Returns the identifier"},{"LineComment":" | string. This parser will fail on identifiers that are reserved"},{"LineComment":" | words. Legal identifier (start) characters and reserved words are"},{"LineComment":" | defined in the `LanguageDef` that is passed to"},{"LineComment":" | `makeTokenParser`. An `identifier` is treated as"},{"LineComment":" | a single token using `try`."}]],"tag":"RCons","contents":["identifier",{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[141,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[146,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[{"LineComment":" | The lexeme parser `reserved name` parses `symbol"},{"LineComment":" | name`, but it also checks that the `name` is not a prefix of a"},{"LineComment":" | valid identifier. A `reserved` word is treated as a single token"},{"LineComment":" | using `try`."}]],"tag":"RCons","contents":["reserved",{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[146,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[{"start":[153,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[{"LineComment":" | This lexeme parser parses a legal operator. Returns the name of the"},{"LineComment":" | operator. This parser will fail on any operators that are reserved"},{"LineComment":" | operators. Legal operator (start) characters and reserved operators"},{"LineComment":" | are defined in the `LanguageDef` that is passed to"},{"LineComment":" | `makeTokenParser`. An `operator` is treated as a"},{"LineComment":" | single token using `try`."}]],"tag":"RCons","contents":["operator",{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[153,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[158,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[{"LineComment":" |The lexeme parser `reservedOp name` parses `symbol"},{"LineComment":" | name`, but it also checks that the `name` is not a prefix of a"},{"LineComment":" | valid operator. A `reservedOp` is treated as a single token using"},{"LineComment":" | `try`."}]],"tag":"RCons","contents":["reservedOp",{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[158,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[{"start":[164,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[{"LineComment":" | This lexeme parser parses a single literal character. Returns the"},{"LineComment":" | literal character value. This parsers deals correctly with escape"},{"LineComment":" | sequences. The literal character is parsed according to the grammar"},{"LineComment":" | rules defined in the Haskell report (which matches most programming"},{"LineComment":" | languages quite closely)."}]],"tag":"RCons","contents":["charLiteral",{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[164,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[170,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[{"LineComment":" | This lexeme parser parses a literal string. Returns the literal"},{"LineComment":" | string value. This parsers deals correctly with escape sequences and"},{"LineComment":" | gaps. The literal string is parsed according to the grammar rules"},{"LineComment":" | defined in the Haskell report (which matches most programming"},{"LineComment":" | languages quite closely)."}]],"tag":"RCons","contents":["stringLiteral",{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[170,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[176,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[{"LineComment":" | This lexeme parser parses a natural number (a positive whole"},{"LineComment":" | number). Returns the value of the number. The number can be"},{"LineComment":" | specified in `decimal`, `hexadecimal` or"},{"LineComment":" | `octal`. The number is parsed according to the grammar"},{"LineComment":" | rules in the Haskell report."}]],"tag":"RCons","contents":["natural",{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[176,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[183,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[{"LineComment":" | This lexeme parser parses an integer (a whole number). This parser"},{"LineComment":" | is like `natural` except that it can be prefixed with"},{"LineComment":" | sign (i.e. `-` or `+`). Returns the value of the number. The"},{"LineComment":" | number can be specified in `decimal`, `hexadecimal`"},{"LineComment":" | or `octal`. The number is parsed according"},{"LineComment":" | to the grammar rules in the Haskell report."}]],"tag":"RCons","contents":["integer",{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[183,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[187,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[{"LineComment":" | This lexeme parser parses a floating point value. Returns the value"},{"LineComment":" | of the number. The number is parsed according to the grammar rules"},{"LineComment":" | defined in the Haskell report."}]],"tag":"RCons","contents":["float",{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[187,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[{"start":[192,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,60]},[{"LineComment":" | This lexeme parser parses either `natural` or a `float`."},{"LineComment":" | Returns the value of the number. This parsers deals with"},{"LineComment":" | any overlap in the grammar rules for naturals and floats. The number"},{"LineComment":" | is parsed according to the grammar rules defined in the Haskell report."}]],"tag":"RCons","contents":["naturalOrFloat",{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,60]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,59]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,48]},[]],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[{"start":[192,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,52]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[192,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,59]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"annotation":[{"start":[195,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[{"LineComment":" | Parses a positive whole number in the decimal system. Returns the"},{"LineComment":" | value of the number."}]],"tag":"RCons","contents":["decimal",{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[195,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[199,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[{"LineComment":" | Parses a positive whole number in the hexadecimal system. The number"},{"LineComment":" | should be prefixed with `0x` or `0X`. Returns the value of the"},{"LineComment":" | number."}]],"tag":"RCons","contents":["hexadecimal",{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[199,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[203,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[{"LineComment":" | Parses a positive whole number in the octal system. The number"},{"LineComment":" | should be prefixed with `0o` or `0O`. Returns the value of the"},{"LineComment":" | number."}]],"tag":"RCons","contents":["octal",{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[203,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[206,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[{"LineComment":" | Lexeme parser `symbol s` parses `string` `s` and skips"},{"LineComment":" | trailing white space."}]],"tag":"RCons","contents":["symbol",{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[206,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[{"start":[224,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[{"LineComment":" | `lexeme p` first applies parser `p` and than the `whiteSpace`"},{"LineComment":" | parser, returning the value of `p`. Every lexical"},{"LineComment":" | token (lexeme) is defined using `lexeme`, this way every parse"},{"LineComment":" | starts at a point without white space. Parsers that use `lexeme` are"},{"LineComment":" | called *lexeme* parsers in this document."},{"LineComment":" |"},{"LineComment":" | The only point where the `whiteSpace` parser should be"},{"LineComment":" | called explicitly is the start of the main parser in order to skip"},{"LineComment":" | any leading white space."},{"LineComment":" |"},{"LineComment":" | ```purescript"},{"LineComment":" | mainParser = do"},{"LineComment":" |   whiteSpace"},{"LineComment":" |   ds <- many (lexeme digit)"},{"LineComment":" |   eof"},{"LineComment":" |   pure (sum ds)"},{"LineComment":" | ```"}]],"tag":"RCons","contents":["lexeme",{"annotation":[{"start":[224,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[224,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[224,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeVar","contents":"a"}]}]},49]},{"annotation":[{"start":[230,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[{"LineComment":" | Parses any white space. White space consists of *zero* or more"},{"LineComment":" | occurrences of a `space`, a line comment or a block (multi"},{"LineComment":" | line) comment. Block comments may be nested. How comments are"},{"LineComment":" | started and ended is defined in the `LanguageDef`"},{"LineComment":" | that is passed to `makeTokenParser`."}]],"tag":"RCons","contents":["whiteSpace",{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[230,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[{"start":[233,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[{"LineComment":" | Lexeme parser `parens p` parses `p` enclosed in parenthesis,"},{"LineComment":" | returning the value of `p`."}]],"tag":"RCons","contents":["parens",{"annotation":[{"start":[233,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[233,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[233,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeVar","contents":"a"}]}]},50]},{"annotation":[{"start":[236,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[{"LineComment":" | Lexeme parser `braces p` parses `p` enclosed in braces (`{` and"},{"LineComment":" | `}`), returning the value of `p`."}]],"tag":"RCons","contents":["braces",{"annotation":[{"start":[236,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[236,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[236,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeVar","contents":"a"}]}]},51]},{"annotation":[{"start":[239,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[{"LineComment":" | Lexeme parser `angles p` parses `p` enclosed in angle brackets (`<`"},{"LineComment":" | and `>`), returning the value of `p`."}]],"tag":"RCons","contents":["angles",{"annotation":[{"start":[239,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[239,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[239,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeVar","contents":"a"}]}]},52]},{"annotation":[{"start":[242,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[{"LineComment":" | Lexeme parser `brackets p` parses `p` enclosed in brackets (`[`"},{"LineComment":" | and `]`), returning the value of `p`."}]],"tag":"RCons","contents":["brackets",{"annotation":[{"start":[242,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[242,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[242,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeVar","contents":"a"}]}]},53]},{"annotation":[{"start":[245,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[{"LineComment":" | Lexeme parser `semi` parses the character `;` and skips any"},{"LineComment":" | trailing white space. Returns the string `;`."}]],"tag":"RCons","contents":["semi",{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[245,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[248,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[{"LineComment":" | Lexeme parser `comma` parses the character `,` and skips any"},{"LineComment":" | trailing white space. Returns the string `,`."}]],"tag":"RCons","contents":["comma",{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[248,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[251,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[{"LineComment":" | Lexeme parser `colon` parses the character `:` and skips any"},{"LineComment":" | trailing white space. Returns the string `:`."}]],"tag":"RCons","contents":["colon",{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[251,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[254,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[{"LineComment":" | Lexeme parser `dot` parses the character `.` and skips any"},{"LineComment":" | trailing white space. Returns the string `.`."}]],"tag":"RCons","contents":["dot",{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[254,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[258,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[{"LineComment":" | Lexeme parser `semiSep p` parses *zero* or more occurrences of `p`"},{"LineComment":" | separated by `semi`. Returns a list of values pureed by"},{"LineComment":" | `p`."}]],"tag":"RCons","contents":["semiSep",{"annotation":[{"start":[258,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[258,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[258,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[258,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},54]},{"annotation":[{"start":[261,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[{"LineComment":" | Lexeme parser `semiSep1 p` parses *one* or more occurrences of `p`"},{"LineComment":" | separated by `semi`. Returns a list of values pureed by `p`."}]],"tag":"RCons","contents":["semiSep1",{"annotation":[{"start":[261,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[261,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[261,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[261,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},55]},{"annotation":[{"start":[265,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[{"LineComment":" | Lexeme parser `commaSep p` parses *zero* or more occurrences of"},{"LineComment":" | `p` separated by `comma`. Returns a list of values pureed"},{"LineComment":" | by `p`."}]],"tag":"RCons","contents":["commaSep",{"annotation":[{"start":[265,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[265,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[265,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[265,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},56]},{"annotation":[{"start":[269,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[{"LineComment":" | Lexeme parser `commaSep1 p` parses *one* or more occurrences of"},{"LineComment":" | `p` separated by `comma`. Returns a list of values pureed"},{"LineComment":" | by `p`."}]],"tag":"RCons","contents":["commaSep1",{"annotation":[{"start":[269,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[269,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[304,84],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,90]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[304,91],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[304,92]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[269,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[269,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},57]},{"annotation":[{"start":[270,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[270,6]},[]],"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},58]}}},{"EDValue":{"edValueName":{"Ident":"digit"},"edValueType":{"annotation":[{"start":[783,10],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,53]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[783,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,53]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[783,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,28]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[783,27],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,28]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[783,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[783,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[783,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,46]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[783,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,39]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[783,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,46]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[783,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,48]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[783,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[783,53]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},47]}}},{"EDValue":{"edValueName":{"Ident":"hexDigit"},"edValueType":{"annotation":[{"start":[787,13],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,56]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[787,24],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,56]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[787,24],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,31]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[787,30],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,31]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[787,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,56]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[787,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[787,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[787,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,42]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[787,43],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,49]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[787,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,51]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[787,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[787,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},45]}}},{"EDValue":{"edValueName":{"Ident":"octDigit"},"edValueType":{"annotation":[{"start":[791,13],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,56]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[791,24],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,56]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[791,24],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,31]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[791,30],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,31]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[791,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,56]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[791,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[791,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[791,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,42]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[791,43],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,49]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[791,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,51]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[791,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[791,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},22]}}},{"EDValue":{"edValueName":{"Ident":"upper"},"edValueType":{"annotation":[{"start":[795,10],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,53]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[795,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,53]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[795,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,28]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[795,27],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,28]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[795,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[795,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[795,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,46]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[795,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,39]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[795,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,46]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[795,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,48]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[795,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[795,53]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},0]}}},{"EDValue":{"edValueName":{"Ident":"space"},"edValueType":{"annotation":[{"start":[799,10],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,53]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[799,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,53]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[799,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,28]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[799,27],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,28]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[799,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[799,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[799,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,46]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[799,32],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,39]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[799,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,46]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[799,47],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,48]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[799,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[799,53]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},16]}}},{"EDValue":{"edValueName":{"Ident":"letter"},"edValueType":{"annotation":[{"start":[803,11],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,54]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[803,22],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,54]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[803,22],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,29]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[803,28],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,29]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[803,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,54]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[803,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[803,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[803,33],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,40]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[803,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[803,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,49]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[803,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[803,54]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},28]}}},{"EDValue":{"edValueName":{"Ident":"alphaNum"},"edValueType":{"annotation":[{"start":[808,13],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,56]},[]],"tag":"ForAll","contents":["m",{"annotation":[{"start":[808,24],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,56]},[]],"tag":"ConstrainedType","contents":[{"constraintAnn":[{"start":[808,24],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,31]},[]],"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"annotation":[{"start":[808,30],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,31]},[]],"tag":"TypeVar","contents":"m"}],"constraintData":null},{"annotation":[{"start":[808,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,56]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[808,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[808,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[808,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,42]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[808,43],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,49]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[808,50],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,51]},[]],"tag":"TypeVar","contents":"m"}]},{"annotation":[{"start":[808,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[808,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},100]}}}],"efSourceSpan":{"start":[3,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[809,52]}}