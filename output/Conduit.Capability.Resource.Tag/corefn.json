{"moduleName":["Conduit","Capability","Resource","Tag"],"imports":[{"annotation":{"meta":null,"sourceSpan":{"start":[12,1],"end":[29,31]}},"moduleName":["Conduit","Capability","Resource","Tag"]},{"annotation":{"meta":null,"sourceSpan":{"start":[12,1],"end":[29,31]}},"moduleName":["Control","Monad","Trans","Class"]},{"annotation":{"meta":null,"sourceSpan":{"start":[16,1],"end":[16,26]}},"moduleName":["Data","Maybe"]},{"annotation":{"meta":null,"sourceSpan":{"start":[17,1],"end":[17,32]}},"moduleName":["Halogen"]},{"annotation":{"meta":null,"sourceSpan":{"start":[12,1],"end":[29,31]}},"moduleName":["Halogen","Query","HalogenM"]},{"annotation":{"meta":null,"sourceSpan":{"start":[14,1],"end":[14,15]}},"moduleName":["Prelude"]},{"annotation":{"meta":null,"sourceSpan":{"start":[12,1],"end":[29,31]}},"moduleName":["Prim"]}],"builtWith":"0.13.8","modulePath":"src/Capability/Resource/Tag.purs","exports":["getAllTags","ManageTag","manageTagHalogenM"],"decls":[{"annotation":{"meta":null,"sourceSpan":{"start":[24,1],"end":[25,41]}},"identifier":"ManageTag","expression":{"annotation":{"meta":{"metaType":"IsTypeClassConstructor"},"sourceSpan":{"start":[24,1],"end":[25,41]}},"body":{"annotation":{"meta":null,"sourceSpan":{"start":[24,1],"end":[25,41]}},"body":{"annotation":{"meta":null,"sourceSpan":{"start":[24,1],"end":[25,41]}},"value":{"literalType":"ObjectLiteral","value":[["Monad0",{"annotation":{"meta":null,"sourceSpan":{"start":[24,1],"end":[25,41]}},"value":{"moduleName":null,"identifier":"Monad0"},"type":"Var"}],["getAllTags",{"annotation":{"meta":null,"sourceSpan":{"start":[24,1],"end":[25,41]}},"value":{"moduleName":null,"identifier":"getAllTags"},"type":"Var"}]]},"type":"Literal"},"argument":"getAllTags","type":"Abs"},"argument":"Monad0","type":"Abs"},"bindType":"NonRec"},{"annotation":{"meta":null,"sourceSpan":{"start":[25,3],"end":[25,41]}},"identifier":"getAllTags","expression":{"annotation":{"meta":null,"sourceSpan":{"start":[25,3],"end":[25,41]}},"body":{"annotation":{"meta":null,"sourceSpan":{"start":[25,3],"end":[25,41]}},"expression":{"annotation":{"meta":null,"sourceSpan":{"start":[25,3],"end":[25,41]}},"value":{"moduleName":null,"identifier":"dict"},"type":"Var"},"fieldName":"getAllTags","type":"Accessor"},"argument":"dict","type":"Abs"},"bindType":"NonRec"},{"annotation":{"meta":null,"sourceSpan":{"start":[28,1],"end":[29,31]}},"identifier":"manageTagHalogenM","expression":{"annotation":{"meta":null,"sourceSpan":{"start":[28,1],"end":[29,31]}},"body":{"annotation":{"meta":null,"sourceSpan":{"start":[28,1],"end":[29,31]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[29,16],"end":[29,31]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[29,21],"end":[29,31]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[0,0],"end":[0,0]}},"value":{"moduleName":null,"identifier":"dictManageTag"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[29,21],"end":[29,31]}},"value":{"moduleName":["Conduit","Capability","Resource","Tag"],"identifier":"getAllTags"},"type":"Var"}},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[29,16],"end":[29,31]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[29,16],"end":[29,31]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[0,0],"end":[0,0]}},"value":{"moduleName":["Prim"],"identifier":"undefined"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[29,16],"end":[29,31]}},"expression":{"annotation":{"meta":null,"sourceSpan":{"start":[0,0],"end":[0,0]}},"value":{"moduleName":null,"identifier":"dictManageTag"},"type":"Var"},"fieldName":"Monad0","type":"Accessor"}},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[29,16],"end":[29,31]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[0,0],"end":[0,0]}},"value":{"moduleName":["Halogen","Query","HalogenM"],"identifier":"monadTransHalogenM"},"type":"Var"},"type":"App","abstraction":{"annotation":{"meta":{"metaType":"IsForeign"},"sourceSpan":{"start":[29,16],"end":[29,20]}},"value":{"moduleName":["Control","Monad","Trans","Class"],"identifier":"lift"},"type":"Var"}}}},"type":"App","abstraction":{"annotation":{"meta":null,"sourceSpan":{"start":[28,1],"end":[29,31]}},"argument":{"annotation":{"meta":null,"sourceSpan":{"start":[28,1],"end":[29,31]}},"body":{"annotation":{"meta":null,"sourceSpan":{"start":[0,0],"end":[0,0]}},"value":{"moduleName":["Halogen","Query","HalogenM"],"identifier":"monadHalogenM"},"type":"Var"},"argument":"$__unused","type":"Abs"},"type":"App","abstraction":{"annotation":{"meta":{"metaType":"IsTypeClassConstructor"},"sourceSpan":{"start":[28,1],"end":[29,31]}},"value":{"moduleName":["Conduit","Capability","Resource","Tag"],"identifier":"ManageTag"},"type":"Var"}}},"argument":"dictManageTag","type":"Abs"},"bindType":"NonRec"}],"comments":[{"LineComment":" | A capability representing the ability to manage tags in our system, which only includes"},{"LineComment":" | fetching all tags in the system."},{"LineComment":" |"},{"LineComment":" | This capability lets us ignore the mechanics of managing a resource and focus on our"},{"LineComment":" | business logic. For now our app implements this capability with a REST API, but we could"},{"LineComment":" | easily swap in a database, RPC, local filesystem, or something else without having to touch"},{"LineComment":" | any application code besides the application monad, `Conduit.AppM`. In addition, we can test"},{"LineComment":" | our business logic by mocking responses in our test monad instead of hitting the server."},{"LineComment":" |"},{"LineComment":" | To learn more about why we use capabilities and this architecture, please see the guide:"},{"LineComment":" | https://thomashoneyman.com/guides/real-world-halogen/push-effects-to-the-edges/"}],"foreign":[],"sourceSpan":{"start":[12,1],"end":[29,31]}}