{"efVersion":"0.13.6","efModuleName":["Text","Parsing","Parser","Language"],"efExports":[{"ValueRef":[{"start":[2,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[118,18]},{"Ident":"haskellDef"}]},{"ValueRef":[{"start":[2,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[118,18]},{"Ident":"haskell"}]},{"ValueRef":[{"start":[2,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[118,18]},{"Ident":"emptyDef"}]},{"ValueRef":[{"start":[2,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[118,18]},{"Ident":"haskellStyle"}]},{"ValueRef":[{"start":[2,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[118,18]},{"Ident":"javaStyle"}]}],"efImports":[{"eiModule":["Prim"],"eiImportType":{"Implicit":[]},"eiImportedAs":["Prim"]},{"eiModule":["Prim"],"eiImportType":{"Implicit":[]},"eiImportedAs":null},{"eiModule":["Prelude"],"eiImportType":{"Implicit":[]},"eiImportedAs":null},{"eiModule":["Control","Alt"],"eiImportType":{"Explicit":[{"ValueOpRef":[{"start":[13,21],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[13,26]},"<|>"]}]},"eiImportedAs":null},{"eiModule":["Text","Parsing","Parser"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[14,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[14,36]},"ParserT",[]]}]},"eiImportedAs":null},{"eiModule":["Text","Parsing","Parser","String"],"eiImportType":{"Explicit":[{"ValueRef":[{"start":[15,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[15,40]},{"Ident":"char"}]},{"ValueRef":[{"start":[15,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[15,47]},{"Ident":"oneOf"}]}]},"eiImportedAs":null},{"eiModule":["Text","Parsing","Parser","Token"],"eiImportType":{"Explicit":[{"TypeRef":[{"start":[16,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[16,46]},"LanguageDef",[]]},{"TypeRef":[{"start":[16,48],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[16,59]},"TokenParser",[]]},{"TypeRef":[{"start":[16,61],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[16,79]},"GenLanguageDef",null]},{"ValueRef":[{"start":[16,81],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[16,97]},{"Ident":"unGenLanguageDef"}]},{"ValueRef":[{"start":[16,99],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[16,114]},{"Ident":"makeTokenParser"}]},{"ValueRef":[{"start":[16,116],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[16,124]},{"Ident":"alphaNum"}]},{"ValueRef":[{"start":[16,126],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[16,132]},{"Ident":"letter"}]}]},"eiImportedAs":null}],"efFixities":[],"efTypeFixities":[],"efDeclarations":[{"EDValue":{"edValueName":{"Ident":"haskellDef"},"edValueType":{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,34]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[71,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[71,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}}},{"EDValue":{"edValueName":{"Ident":"haskell"},"edValueType":{"annotation":[{"start":[134,7],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[270,6]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[134,7],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[134,8]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[{"start":[141,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[{"LineComment":" | This lexeme parser parses a legal identifier. Returns the identifier"},{"LineComment":" | string. This parser will fail on identifiers that are reserved"},{"LineComment":" | words. Legal identifier (start) characters and reserved words are"},{"LineComment":" | defined in the `LanguageDef` that is passed to"},{"LineComment":" | `makeTokenParser`. An `identifier` is treated as"},{"LineComment":" | a single token using `try`."}]],"tag":"RCons","contents":["identifier",{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[141,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[141,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[141,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[146,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[{"LineComment":" | The lexeme parser `reserved name` parses `symbol"},{"LineComment":" | name`, but it also checks that the `name` is not a prefix of a"},{"LineComment":" | valid identifier. A `reserved` word is treated as a single token"},{"LineComment":" | using `try`."}]],"tag":"RCons","contents":["reserved",{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[146,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[146,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[146,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[146,55]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[{"start":[153,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[{"LineComment":" | This lexeme parser parses a legal operator. Returns the name of the"},{"LineComment":" | operator. This parser will fail on any operators that are reserved"},{"LineComment":" | operators. Legal operator (start) characters and reserved operators"},{"LineComment":" | are defined in the `LanguageDef` that is passed to"},{"LineComment":" | `makeTokenParser`. An `operator` is treated as a"},{"LineComment":" | single token using `try`."}]],"tag":"RCons","contents":["operator",{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[153,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[153,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[153,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[158,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[{"LineComment":" |The lexeme parser `reservedOp name` parses `symbol"},{"LineComment":" | name`, but it also checks that the `name` is not a prefix of a"},{"LineComment":" | valid operator. A `reservedOp` is treated as a single token using"},{"LineComment":" | `try`."}]],"tag":"RCons","contents":["reservedOp",{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[158,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[158,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[158,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[158,55]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"annotation":[{"start":[164,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[{"LineComment":" | This lexeme parser parses a single literal character. Returns the"},{"LineComment":" | literal character value. This parsers deals correctly with escape"},{"LineComment":" | sequences. The literal character is parsed according to the grammar"},{"LineComment":" | rules defined in the Haskell report (which matches most programming"},{"LineComment":" | languages quite closely)."}]],"tag":"RCons","contents":["charLiteral",{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[164,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[164,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[164,45]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[{"start":[170,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[{"LineComment":" | This lexeme parser parses a literal string. Returns the literal"},{"LineComment":" | string value. This parsers deals correctly with escape sequences and"},{"LineComment":" | gaps. The literal string is parsed according to the grammar rules"},{"LineComment":" | defined in the Haskell report (which matches most programming"},{"LineComment":" | languages quite closely)."}]],"tag":"RCons","contents":["stringLiteral",{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[170,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[170,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[170,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[176,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[{"LineComment":" | This lexeme parser parses a natural number (a positive whole"},{"LineComment":" | number). Returns the value of the number. The number can be"},{"LineComment":" | specified in `decimal`, `hexadecimal` or"},{"LineComment":" | `octal`. The number is parsed according to the grammar"},{"LineComment":" | rules in the Haskell report."}]],"tag":"RCons","contents":["natural",{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[176,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[176,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[176,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[183,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[{"LineComment":" | This lexeme parser parses an integer (a whole number). This parser"},{"LineComment":" | is like `natural` except that it can be prefixed with"},{"LineComment":" | sign (i.e. `-` or `+`). Returns the value of the number. The"},{"LineComment":" | number can be specified in `decimal`, `hexadecimal`"},{"LineComment":" | or `octal`. The number is parsed according"},{"LineComment":" | to the grammar rules in the Haskell report."}]],"tag":"RCons","contents":["integer",{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[183,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[183,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[183,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[187,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[{"LineComment":" | This lexeme parser parses a floating point value. Returns the value"},{"LineComment":" | of the number. The number is parsed according to the grammar rules"},{"LineComment":" | defined in the Haskell report."}]],"tag":"RCons","contents":["float",{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[187,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[187,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[187,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[{"start":[192,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,60]},[{"LineComment":" | This lexeme parser parses either `natural` or a `float`."},{"LineComment":" | Returns the value of the number. This parsers deals with"},{"LineComment":" | any overlap in the grammar rules for naturals and floats. The number"},{"LineComment":" | is parsed according to the grammar rules defined in the Haskell report."}]],"tag":"RCons","contents":["naturalOrFloat",{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,60]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,59]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[192,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,48]},[]],"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"annotation":[{"start":[192,49],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,52]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[192,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[192,59]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},{"annotation":[{"start":[195,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[{"LineComment":" | Parses a positive whole number in the decimal system. Returns the"},{"LineComment":" | value of the number."}]],"tag":"RCons","contents":["decimal",{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[195,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[195,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[195,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[199,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[{"LineComment":" | Parses a positive whole number in the hexadecimal system. The number"},{"LineComment":" | should be prefixed with `0x` or `0X`. Returns the value of the"},{"LineComment":" | number."}]],"tag":"RCons","contents":["hexadecimal",{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[199,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[199,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[199,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[203,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[{"LineComment":" | Parses a positive whole number in the octal system. The number"},{"LineComment":" | should be prefixed with `0o` or `0O`. Returns the value of the"},{"LineComment":" | number."}]],"tag":"RCons","contents":["octal",{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[203,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[203,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[203,44]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[{"start":[206,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[{"LineComment":" | Lexeme parser `symbol s` parses `string` `s` and skips"},{"LineComment":" | trailing white space."}]],"tag":"RCons","contents":["symbol",{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,36],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,38]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[206,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,35]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[206,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[206,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[206,57]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"annotation":[{"start":[224,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[{"LineComment":" | `lexeme p` first applies parser `p` and than the `whiteSpace`"},{"LineComment":" | parser, returning the value of `p`. Every lexical"},{"LineComment":" | token (lexeme) is defined using `lexeme`, this way every parse"},{"LineComment":" | starts at a point without white space. Parsers that use `lexeme` are"},{"LineComment":" | called *lexeme* parsers in this document."},{"LineComment":" |"},{"LineComment":" | The only point where the `whiteSpace` parser should be"},{"LineComment":" | called explicitly is the start of the main parser in order to skip"},{"LineComment":" | any leading white space."},{"LineComment":" |"},{"LineComment":" | ```purescript"},{"LineComment":" | mainParser = do"},{"LineComment":" |   whiteSpace"},{"LineComment":" |   ds <- many (lexeme digit)"},{"LineComment":" |   eof"},{"LineComment":" |   pure (sum ds)"},{"LineComment":" | ```"}]],"tag":"RCons","contents":["lexeme",{"annotation":[{"start":[224,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[224,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[224,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[224,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[224,69]},[]],"tag":"TypeVar","contents":"a"}]}]},4]},{"annotation":[{"start":[230,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[{"LineComment":" | Parses any white space. White space consists of *zero* or more"},{"LineComment":" | occurrences of a `space`, a line comment or a block (multi"},{"LineComment":" | line) comment. Block comments may be nested. How comments are"},{"LineComment":" | started and ended is defined in the `LanguageDef`"},{"LineComment":" | that is passed to `makeTokenParser`."}]],"tag":"RCons","contents":["whiteSpace",{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[230,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[230,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[230,45]},[]],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[{"start":[233,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[{"LineComment":" | Lexeme parser `parens p` parses `p` enclosed in parenthesis,"},{"LineComment":" | returning the value of `p`."}]],"tag":"RCons","contents":["parens",{"annotation":[{"start":[233,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[233,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[233,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[233,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[233,69]},[]],"tag":"TypeVar","contents":"a"}]}]},5]},{"annotation":[{"start":[236,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[{"LineComment":" | Lexeme parser `braces p` parses `p` enclosed in braces (`{` and"},{"LineComment":" | `}`), returning the value of `p`."}]],"tag":"RCons","contents":["braces",{"annotation":[{"start":[236,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[236,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[236,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[236,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[236,69]},[]],"tag":"TypeVar","contents":"a"}]}]},6]},{"annotation":[{"start":[239,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[{"LineComment":" | Lexeme parser `angles p` parses `p` enclosed in angle brackets (`<`"},{"LineComment":" | and `>`), returning the value of `p`."}]],"tag":"RCons","contents":["angles",{"annotation":[{"start":[239,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[239,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[239,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[239,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[239,69]},[]],"tag":"TypeVar","contents":"a"}]}]},7]},{"annotation":[{"start":[242,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[{"LineComment":" | Lexeme parser `brackets p` parses `p` enclosed in brackets (`[`"},{"LineComment":" | and `]`), returning the value of `p`."}]],"tag":"RCons","contents":["brackets",{"annotation":[{"start":[242,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,53],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,55]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,52]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,48]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,39],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,46]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[242,51],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,52]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,67]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,65]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[242,56],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,63]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[242,68],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[242,69]},[]],"tag":"TypeVar","contents":"a"}]}]},8]},{"annotation":[{"start":[245,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[{"LineComment":" | Lexeme parser `semi` parses the character `;` and skips any"},{"LineComment":" | trailing white space. Returns the string `;`."}]],"tag":"RCons","contents":["semi",{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[245,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[245,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[245,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[248,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[{"LineComment":" | Lexeme parser `comma` parses the character `,` and skips any"},{"LineComment":" | trailing white space. Returns the string `,`."}]],"tag":"RCons","contents":["comma",{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[248,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[248,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[248,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[251,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[{"LineComment":" | Lexeme parser `colon` parses the character `:` and skips any"},{"LineComment":" | trailing white space. Returns the string `:`."}]],"tag":"RCons","contents":["colon",{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[251,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[251,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[251,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[254,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[{"LineComment":" | Lexeme parser `dot` parses the character `.` and skips any"},{"LineComment":" | trailing white space. Returns the string `.`."}]],"tag":"RCons","contents":["dot",{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,40]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,38]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[254,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,36]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[254,41],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[254,47]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[258,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[{"LineComment":" | Lexeme parser `semiSep p` parses *zero* or more occurrences of `p`"},{"LineComment":" | separated by `semi`. Returns a list of values pureed by"},{"LineComment":" | `p`."}]],"tag":"RCons","contents":["semiSep",{"annotation":[{"start":[258,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[258,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[258,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[258,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[258,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[258,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},9]},{"annotation":[{"start":[261,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[{"LineComment":" | Lexeme parser `semiSep1 p` parses *one* or more occurrences of `p`"},{"LineComment":" | separated by `semi`. Returns a list of values pureed by `p`."}]],"tag":"RCons","contents":["semiSep1",{"annotation":[{"start":[261,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[261,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[261,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[261,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[261,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[261,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},10]},{"annotation":[{"start":[265,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[{"LineComment":" | Lexeme parser `commaSep p` parses *zero* or more occurrences of"},{"LineComment":" | `p` separated by `comma`. Returns a list of values pureed"},{"LineComment":" | by `p`."}]],"tag":"RCons","contents":["commaSep",{"annotation":[{"start":[265,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[265,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[265,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[265,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[265,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[265,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},11]},{"annotation":[{"start":[269,9],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[{"LineComment":" | Lexeme parser `commaSep1 p` parses *one* or more occurrences of"},{"LineComment":" | `p` separated by `comma`. Returns a list of values pureed"},{"LineComment":" | by `p`."}]],"tag":"RCons","contents":["commaSep1",{"annotation":[{"start":[269,29],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"ForAll","contents":["a",{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,54],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,56]},[]],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,53]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,51]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,49]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,40],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,47]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[269,52],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,53]},[]],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,77]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,68]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,66]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,57],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,64]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser"],"ParserT"]},{"annotation":[{"start":[129,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[129,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[129,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},{"annotation":[{"start":[269,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,76]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[269,70],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,74]},[]],"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"annotation":[{"start":[269,75],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[269,76]},[]],"tag":"TypeVar","contents":"a"}]}]}]},12]},{"annotation":[{"start":[270,5],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[270,6]},[]],"tag":"REmpty"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}},{"EDValue":{"edValueName":{"Ident":"emptyDef"},"edValueType":{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,34]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[71,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[71,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}}},{"EDValue":{"edValueName":{"Ident":"haskellStyle"},"edValueType":{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,34]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[71,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[71,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}}},{"EDValue":{"edValueName":{"Ident":"javaStyle"},"edValueType":{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeApp","contents":[{"annotation":[{"start":[71,20],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,34]},[]],"tag":"TypeConstructor","contents":[["Text","Parsing","Parser","Token"],"GenLanguageDef"]},{"annotation":[{"start":[71,35],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,41]},[]],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[{"start":[71,42],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Token.purs","end":[71,50]},[]],"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]}}}],"efSourceSpan":{"start":[2,1],"name":".spago/parsing/v5.0.3/src/Text/Parsing/Parser/Language.purs","end":[118,18]}}